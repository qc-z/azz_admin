{"version":3,"sources":["webpack:///static/js/0.26a59e88f166854c4cc0.js","webpack:///./src/page/home.vue","webpack:///./~/_zrender@3.7.4@zrender/lib/core/util.js","webpack:///headTop.vue?1fd6","webpack:///./src/components/headTop.vue?702c","webpack:///./src/components/headTop.vue?c76b","webpack:///./src/components/headTop.vue","webpack:///./src/components/headTop.vue?7568","webpack:///./~/_echarts@3.8.5@echarts/lib/echarts.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/graphic.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/model.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/number.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/vector.js","webpack:///./~/_echarts@3.8.5@echarts/lib/config.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Path.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/env.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/BoundingRect.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/format.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/Model.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/clazz.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/Component.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/layout.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/text.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/curve.js","webpack:///./~/_zrender@3.7.4@zrender/lib/mixin/Eventful.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/matrix.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/axisHelper.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/event.js","webpack:///./~/_zrender@3.7.4@zrender/lib/tool/color.js","webpack:///./~/_echarts@3.8.5@echarts/lib/scale/Scale.js","webpack:///./~/_zrender@3.7.4@zrender/lib/config.js","webpack:///./~/_zrender@3.7.4@zrender/lib/container/Group.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/PathProxy.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/featureManager.js","webpack:///./~/_echarts@3.8.5@echarts/lib/data/List.js","webpack:///./~/_echarts@3.8.5@echarts/lib/scale/Interval.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/component.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/symbol.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/timsort.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Displayable.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Gradient.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/image.js","webpack:///./~/_echarts@3.8.5@echarts/lib/CoordinateSystem.js","webpack:///./~/_echarts@3.8.5@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/_echarts@3.8.5@echarts/lib/util/throttle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/_echarts@3.8.5@echarts/lib/data/DataDiffer.js","webpack:///./~/_echarts@3.8.5@echarts/lib/lang.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/Series.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/_echarts@3.8.5@echarts/lib/scale/helper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/view/Chart.js","webpack:///./~/_zrender@3.7.4@zrender/lib/Element.js","webpack:///./~/_zrender@3.7.4@zrender/lib/animation/Animator.js","webpack:///./~/_zrender@3.7.4@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/util.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/windingLine.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/LRU.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/bbox.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/guid.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/log.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Image.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Pattern.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Style.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/poly.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/text.js","webpack:///./~/_zrender@3.7.4@zrender/lib/mixin/Transformable.js","webpack:///./~/_zrender@3.7.4@zrender/lib/zrender.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/listComponent.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/Axis.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/_echarts@3.8.5@echarts/lib/view/Component.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/_echarts@3.8.5@echarts/lib/ExtensionAPI.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/helper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/legend.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/legend/LegendModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/legend/LegendView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/legend/legendAction.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/legend/legendFilter.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/title.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/geo/Region.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/geo/parseGeoJson.js","webpack:///./~/_echarts@3.8.5@echarts/lib/export.js","webpack:///./~/_echarts@3.8.5@echarts/lib/helper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/loading/default.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/Global.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/OptionManager.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/globalDefault.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/model/mixin/textStyle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/_echarts@3.8.5@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/scale/Log.js","webpack:///./~/_echarts@3.8.5@echarts/lib/scale/Ordinal.js","webpack:///./~/_echarts@3.8.5@echarts/lib/scale/Time.js","webpack:///./~/_echarts@3.8.5@echarts/lib/visual/seriesColor.js","webpack:///./~/_zrender@3.7.4@zrender/lib/Handler.js","webpack:///./~/_zrender@3.7.4@zrender/lib/Layer.js","webpack:///./~/_zrender@3.7.4@zrender/lib/Painter.js","webpack:///./~/_zrender@3.7.4@zrender/lib/Storage.js","webpack:///./~/_zrender@3.7.4@zrender/lib/animation/Animation.js","webpack:///./~/_zrender@3.7.4@zrender/lib/animation/Clip.js","webpack:///./~/_zrender@3.7.4@zrender/lib/animation/easing.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/arc.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/cubic.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/line.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/path.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/polygon.js","webpack:///./~/_zrender@3.7.4@zrender/lib/contain/quadratic.js","webpack:///./~/_zrender@3.7.4@zrender/lib/core/GestureMgr.js","webpack:///./~/_zrender@3.7.4@zrender/lib/dom/HandlerProxy.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/CompoundPath.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/LinearGradient.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/RadialGradient.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/Text.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Arc.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Circle.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Line.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Rect.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Ring.js","webpack:///./~/_zrender@3.7.4@zrender/lib/graphic/shape/Sector.js","webpack:///./~/_zrender@3.7.4@zrender/lib/mixin/Animatable.js","webpack:///./~/_zrender@3.7.4@zrender/lib/mixin/Draggable.js","webpack:///./~/_zrender@3.7.4@zrender/lib/tool/path.js","webpack:///./~/_zrender@3.7.4@zrender/lib/tool/transformPath.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/helper/Symbol.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axis/AxisView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/history.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/gridSimple.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Grid.js","webpack:///tendency.vue","webpack:///home.vue","webpack:///./src/page/home.vue?19ac","webpack:///./src/components/tendency.vue?667a","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/bar.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/bar/BarSeries.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/bar/BarView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/bar/helper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/helper/labelHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/line.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/line/LineSeries.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/line/LineView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/_echarts@3.8.5@echarts/lib/chart/line/poly.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axis.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/dataZoomSelect.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/BrushController.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/BrushTargetManager.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/brushHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/cursorHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/interactionMutex.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/helper/sliderMove.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/markPoint.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/marker/MarkPointModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/marker/MarkPointView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/marker/MarkerModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/marker/MarkerView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/marker/markerHelper.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/ToolboxView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/DataView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/Restore.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/tooltip.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/axisDefault.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/axisModelCreator.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/_echarts@3.8.5@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/_echarts@3.8.5@echarts/lib/layout/barGrid.js","webpack:///./~/_echarts@3.8.5@echarts/lib/layout/points.js","webpack:///./~/_echarts@3.8.5@echarts/lib/processor/dataSample.js","webpack:///./~/_echarts@3.8.5@echarts/lib/visual/symbol.js","webpack:///./src/page/home.vue?cbec","webpack:///./src/components/tendency.vue?7cbf","webpack:///./~/_time-formater@1.0.1@time-formater/index.js","webpack:///./~/_time-formater@1.0.1@time-formater/timeformater.js","webpack:///./src/components/tendency.vue","webpack:///./src/page/home.vue?1e9a","webpack:///./src/components/tendency.vue?0a23"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","$override","name","fn","methods","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","document","createElement","get","prefixedKey","removeKey","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_3__api_getData__","__WEBPACK_IMPORTED_MODULE_4__config_env__","__WEBPACK_IMPORTED_MODULE_5_vuex__","baseImgPath","created","adminInfo","_id","computed","out","_this","$confirm","confirmButtonText","cancelButtonText","then","a","mark","_callee","sys","client","wrap","_context","prev","next","localStorage","getItem","sent","code","$message","$router","stop","catch","handleCommand","command","_this2","_callee2","res","_context2","status","version","sources","names","mappings","file","sourcesContent","sourceRoot","content","locals","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator","to","path","_v","_l","$route","item","index","_s","menu-align","src","slot","on","click","staticRenderFns","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","setAttribute","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","PRIORITY_VISUAL_LAYOUT","registerVisual","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","colorTool","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","url","getType","toDataURL","getConnectedDataURL","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","_disposed","clear","Date","disconnect","dataTool","___ec_export","extendShape","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","createFromString","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","onload","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","baseText","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","mergePath","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","nubmerUtil","parseDate","NaN","createDataFormatModel","Model","dataFormatMixin","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","has","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","dimIndex","formatUtil","TEXT_STYLE_OPTIONS","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesName","marker","getTooltipMarker","$vars","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","makeGetter","hostObj","_trim","str","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","MAX_SAFE_INTEGER","ArrayCtor","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","global","dev","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","_default","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","extraCssText","formatTime","isUTC","date","numberUtil","utc","M","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","doGet","pathArr","getParent","getParentMethod","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","MEMBER_PRIFIX","hasOwn","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getDependencies","deps","arrayPush","componentUtil","boxLayoutMixin","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","targetOption","newOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getCategories","IntervalScale","Scale","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","preventDefault","stopPropagation","cancelBubble","returnValue","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","setting","_setting","_extent","_interval","getSetting","unionExtent","unionExtentFromData","dim","getDataExtent","start","end","thisExtent","isBlank","_isBlank","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","excludes","includes","propName","ctor","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","dimStore","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","pure","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","initData","nameList","dimValueGetter","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","reverse","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","DELIMITER","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","_clazz","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","beforeBrush","proxySymbol","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","tooltip","label","delay","debounce","lastExec","getTime","timer","scope","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","axesInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","toolbox","title","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","tiled","restore","saveAsImage","_format","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","getAxisTooltipData","getTooltipPosition","colorIdx","colorNameMap","colorPalette","fixExtent","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","guid","Animatable","clipPath","drift","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","normalizeRadian","PI2","windingLine","dir","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","idStart","ZImage","_image","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","textRect","transformText","textOrigin","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","r1","r2","r3","r4","total","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","origin","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","collect","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","getAxisPointerModel","boxLayoutParams","getBoxLayoutParams","viewportSize","layoutBox","makeBackground","getItemStyle","fixExtentWithBands","nTick","axisHelper","normalizedExtent","Axis","inverse","onBand","_labelInterval","containData","dataToCoord","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","componentProto","orignalBrush","modified","clipPaths","shadowTemp","chartInstance","echartsAPIList","isCoordSupported","coordType","COORDS","createNameEach","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","eachAxisDim","echarts","legendFilter","LegendModel","selected","_updateData","legendData","_data","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","align","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_symbol","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","itemGroup","_createItem","eachRawSeries","itemIcon","tooltipModel","legendGlobalTooltipModel","getTextColor","hitRect","formatterParams","legendIndex","__legendDataIndex","contentRect","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textEl","subText","subTextEl","link","sublink","open","groupRect","layoutOption","alignStyle","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","region","format","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","createList","createScale","axisModelCommonMixin","mixinAxisModelCommonMethods","_completeDimensions","textColor","maskColor","mask","lineCap","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMinin","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachSeriesByType","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","animationDurationUpdate","animationEasingUpdate","animationThreshold","progressiveThreshold","hoverLayerThreshold","useUTC","makeStyleMapper","getAreaStyle","getBorderLineDash","lineType","getLineStyle","getLineDash","dotSize","dashSize","graphicUtil","PATH_COLOR","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","clockwise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","compatItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","encodeColor","colorAccessPath","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","returnFalse","createDom","newDom","newDomStyle","Layer","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","cssText","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","wh","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","_x","_curve","pointPair","eventUtil","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","pos","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","textHelper","shadowColor","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","cp0","v2Add","interpolate","segs","w2","w3","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","polyHelper","r0","fixClipWithShadow","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_y","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","nPoint","mathAtan2","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","_labelHelper","findLabelValueDim","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","elStyle","symbolInnerColor","useNameLabel","valueDim","onEmphasis","ratio","onNormal","fadeOut","keepLabel","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelMargin","labelRotation","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","labelOffset","labelStr","targetType","_dumbGroup","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","__fullText","__truncatedText","axisRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","dataToPoint","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","buildElStyle","axisPointerType","styleModel","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","verticalAlign","confineInContainer","bgColor","viewWidth","viewHeight","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","makeSectorShape","retrieveRaw","updateRangeUse","dataZoomModel","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","AxisProxy","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","coordModel","store","coordIndex","coordSysLists","newSnapshot","giveStore","dataZoomId","percentRange","snapshot","ATTR","xAxis","yAxis","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","labelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getOtherAxis","grids","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_title__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__","__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_markPoint__","__WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_tooltip__","mounted","myChart","getElementById","legend","readOnly","sevenDay","axisLabel","sevenDate","watch","__WEBPACK_IMPORTED_MODULE_2__components_headTop__","__WEBPACK_IMPORTED_MODULE_2__components_headTop___default","__WEBPACK_IMPORTED_MODULE_3__components_tendency__","__WEBPACK_IMPORTED_MODULE_3__components_tendency___default","__WEBPACK_IMPORTED_MODULE_4_time_formater__","__WEBPACK_IMPORTED_MODULE_4_time_formater___default","apiCount","userCount","orderCount","adminCount","allApiCount","allUserCount","allOrderCount","allAdminCount","headTop","tendency","getSevenData","allApi","today","apiArr","barLayoutGrid","BaseBarSeries","brushSelector","removeRect","animationModel","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","_helper","barItemStyle","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","newIndex","oldIndex","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","pt","legendHoverLink","barMinHeight","barMinAngle","fixPosition","labelDims","visualSymbol","layoutPoints","dataSample","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","sign","getStackedOnPoints","valueAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","_poly","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","areaStyle","axisTrigger","AxisPointerModel","triggerOn","shadowStyle","handle","icon","globalListener","AxisPointerView","BaseAxisPointer","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setMinMaxSpan","minMaxSpan","_minMaxSpan","_dataZoomModel","minMax","valueSpan","_dataExtent","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","filterData","isInWindow","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","DataZoomView","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","valueRange","BrushController","_brushType","_brushOption","_panels","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newBrushOption","oldCovers","newCovers","unmount","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","rangeOrCoordRange","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","normalizeRect","localPoints","specifiedXYIndex","brushWidth","targetModel","onIrrelevantElement","_cursorHelper","targetCoordSysModel","IRRELEVANT_EXCLUDES","resourceKey","userKey","getStore","isTaken","handleEnds","handleIndex","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","currDistSign","MarkerModel","updateMarkerLayout","xPx","yPx","mpModel","coordDimsInfos","dataOpt","markerHelper","dataTransform","dataFilter","MarkerView","markPointModel","markerGroupMap","renderSeries","symbolDrawMap","__keep","fillLabel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","html","markerModelKey","hasXOrY","hasXAndY","valueAxisDim","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","numCalculate","markerTypeCalculator","baseDataDim","valueDataDim","valueIndex","average","featureManager","ToolboxModel","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","isUserFeatureName","listComponentHelper","toolboxModel","processFeature","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","assembleSeriesWithCategoryAxis","tables","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","originalData","newVal","dataViewLang","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","clientHeight","newSeriesOptList","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","dataZoomOpts","toolboxOpt","MagicType","magicTypeLang","availableIcons","seriesOptGenreator","radioTypes","generateNewSeriesTypes","newSeriesOpt","radio","currentType","Restore","restoreLang","SaveAsImage","saveAsImageLang","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","write","evt","bubbles","cancelable","dispatchEvent","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","hideLater","_hideDelay","currentStyle","setContent","setEnterable","enterable","clientWidth","viewportRootOffset","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","splitLine","splitArea","axisDefault","timeAxis","logAxis","logBase","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","axisX","axisY","containLabel","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","coordDims","lastCoord","lastCoordOrigin","sampler","samplers","indexSampler","nearest","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","TimeFormater","that","toLocaleString","fromNow","oldTime","newTime","now","toDouble","num","YYYY","MM","MMM","MMMM","D","Do","DD","getDay","dd","ddd","dddd","getHours","HH","hh","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","SS","hm","X","staticStyle","margin-bottom","gutter","_e","_m"],"mappings":"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p/BhBu5B,ExJqp/BgBkpB,OACI9+C,KwJpp/BpB,OxJqp/BoB09D,QwJnp/BpB,IxJqp/BgBrkB,SACIpxD,QwJnp/BpB,QxJqp/BgB0zG,QACIzjH,MAAO,SAAU,QAAS,OwJnp/B9C,UxJqp/BgB2mE,SACI2D,MwJpp/BpB,ExJqp/BoB8c,SACIlgB,UACI4zC,WwJnp/B5B,QxJqp/BwB9zC,UAAY08C,UwJpp/BpC,GxJqp/BwBr8C,WAAa3lE,MAAO,MwJpp/B5C,SxJqp/BwB8lE,aAGRu3C,OACIr9G,KwJpp/BpB,WxJqp/BoBu0C,awJpp/BpB,ExJqp/BoBj2C,KAAMuB,KwJnp/B1BoiH,UxJqp/BgB3E,QACIt9G,KwJnp/BpB,QxJop/BoB5E,KwJnp/BpB,SxJop/BoBkgB,IwJnp/BpB,ExJop/BoBE,IwJnp/BpB,IxJop/BoB2G,SwJnp/BpB,OxJop/BoB8wF,UACIr4B,WACIn4D,MwJjp/B5B,SxJop/BoBy/F,WACItuF,UwJjp/BxB,axJop/BoB5zB,KwJlp/BpB,QxJmp/BoB5E,KwJlp/BpB,QxJmp/BoBkgB,IwJlp/BpB,ExJmp/BoBE,IwJlp/BpB,IxJmp/BoB2G,SwJlp/BpB,QxJmp/BoB8wF,UACIr4B,WACIn4D,MwJhp/B5B,SxJmp/BoBy/F,WACItuF,UwJ/o/BxB,axJkp/BgBhjB,SACIxV,KwJhp/BpB,SxJip/BoB4E,KwJhp/BpB,OxJip/BoB1B,KAAMuB,KAAKsiH,UwJhp/B/B,GxJip/BoBxyB,WACIrxF,OwJhp/BxB0B,KAAA,MAAA5E,KACA,QAAA4E,KAAA,MAAA5E,KAIA,WxJ8o/BoBA,KwJ5o/BpB,QxJ6o/BoB4E,KwJ5o/BpB,OxJ6o/BoB1B,KAAMuB,KAAKsiH,UwJ5o/B/B,GxJ6o/BoB/I,WwJ5o/BpB,ExJ6o/BoBzpB,WACIrxF,OwJ5o/BxB0B,KAAA,MAAA5E,KACA,QAAA4E,KAAA,MAAA5E,KAIA,WxJ0o/BoBA,KwJxo/BpB,OxJyo/BoB4E,KwJxo/BpB,OxJyo/BoB1B,KAAMuB,KAAKsiH,UwJxo/B/B,GxJyo/BoB/I,WwJxo/BpB,ExJyo/BoBzpB,WACIrxF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","file":"static/js/0.26a59e88f166854c4cc0.js","sourcesContent":["webpackJsonp([0],Array(210).concat([\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(688)\n\nvar Component = __webpack_require__(84)(\n  /* script */\n  __webpack_require__(537),\n  /* template */\n  __webpack_require__(740),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n/* 229 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_extends__ = __webpack_require__(48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__api_getData__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_env__ = __webpack_require__(88);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vuex__ = __webpack_require__(89);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n\tdata: function data() {\n\t\treturn {\n\t\t\tbaseImgPath: __WEBPACK_IMPORTED_MODULE_4__config_env__[\"b\" /* baseImgPath */]\n\t\t};\n\t},\n\tcreated: function created() {\n\t\tif (!this.adminInfo._id) {}\n\t},\n\n\tcomputed: __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_vuex__[\"b\" /* mapState */])(['adminInfo'])),\n\tmethods: {\n\t\tout: function out() {\n\t\t\tvar _this = this;\n\n\t\t\tthis.$confirm('你将要退出登录', '提示', {\n\t\t\t\tconfirmButtonText: '确定',\n\t\t\t\tcancelButtonText: '取消',\n\t\t\t\ttype: 'warning'\n\t\t\t}).then(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee() {\n\t\t\t\tvar sys, client;\n\t\t\t\treturn __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {\n\t\t\t\t\twhile (1) {\n\t\t\t\t\t\tswitch (_context.prev = _context.next) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tif (!(localStorage.getItem('role') == \"1\")) {\n\t\t\t\t\t\t\t\t\t_context.next = 7;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_context.next = 3;\n\t\t\t\t\t\t\t\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__api_getData__[\"e\" /* sysSignOut */])();\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tsys = _context.sent;\n\n\t\t\t\t\t\t\t\tif (sys.code == 1) {\n\t\t\t\t\t\t\t\t\t_this.$message({\n\t\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\t\tmessage: '退出成功!'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t_this.$router.push('/');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_context.next = 11;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\t\t_context.next = 9;\n\t\t\t\t\t\t\t\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__api_getData__[\"f\" /* clientSignOut */])();\n\n\t\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\t\tclient = _context.sent;\n\n\t\t\t\t\t\t\t\tif (client.code == 1) {\n\t\t\t\t\t\t\t\t\t_this.$message({\n\t\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\t\tmessage: '退出成功!'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t_this.$router.push('/');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 11:\n\t\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\t\treturn _context.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, _callee, _this);\n\t\t\t}))).catch(function () {\n\t\t\t\t_this.$message({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: '已取消'\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\thandleCommand: function handleCommand(command) {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2() {\n\t\t\t\tvar res;\n\t\t\t\treturn __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {\n\t\t\t\t\twhile (1) {\n\t\t\t\t\t\tswitch (_context2.prev = _context2.next) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tif (!(command == 'home')) {\n\t\t\t\t\t\t\t\t\t_context2.next = 4;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_this2.$router.push('/manage');\n\t\t\t\t\t\t\t\t_context2.next = 9;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tif (!(command == 'singout')) {\n\t\t\t\t\t\t\t\t\t_context2.next = 9;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_context2.next = 7;\n\t\t\t\t\t\t\t\treturn __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__api_getData__[\"g\" /* signout */])();\n\n\t\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\t\tres = _context2.sent;\n\n\t\t\t\t\t\t\t\tif (res.status == 1) {\n\t\t\t\t\t\t\t\t\t_this2.$message({\n\t\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\t\tmessage: '退出成功'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t_this2.$router.push('/');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t_this2.$message({\n\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\tmessage: res.message\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\tcase 'end':\n\t\t\t\t\t\t\t\treturn _context2.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, _callee2, _this2);\n\t\t\t}))();\n\t\t}\n\t}\n});\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(186)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".allcover{position:absolute;top:0;right:0}.ctt{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ctt,.tb{position:absolute;top:50%}.tb{-webkit-transform:translateY(-50%);transform:translateY(-50%)}.lr{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.header_container{background-color:#eff2f7;height:60px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:20px}.avator{width:45px;height:45px;border-radius:50%;margin-right:37px}.el-dropdown-menu__item{text-align:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/tusm/gitlab/arpt/aizazheng/src/components/headTop.vue\"],\"names\":[],\"mappings\":\"AACA,UACE,kBAAmB,AACnB,MAAO,AACP,OAAS,CACV,AACD,KAGE,SAAU,AACV,uCAAyC,AACjC,8BAAiC,CAC1C,AACD,SANE,kBAAmB,AACnB,OAAS,CAUV,AALD,IAGE,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,IACE,kBAAmB,AACnB,SAAU,AACV,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,kBACE,yBAA0B,AAC1B,YAAa,AACb,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,yBAA0B,AACtB,sBAAuB,AACnB,8BAA+B,AACvC,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,iBAAmB,CACpB,AACD,QACE,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,iBAAmB,CACpB,AACD,wBACE,iBAAmB,CACpB\",\"file\":\"headTop.vue\",\"sourcesContent\":[\"\\n.allcover {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.ctt {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.tb {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.lr {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n}\\n.header_container {\\n  background-color: #EFF2F7;\\n  height: 60px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding-left: 20px;\\n}\\n.avator {\\n  width: 45px;\\n  height: 45px;\\n  border-radius: 50%;\\n  margin-right: 37px;\\n}\\n.el-dropdown-menu__item {\\n  text-align: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(230);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(187)(\"61dedae5\", content, true);\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(231)\n\nvar Component = __webpack_require__(84)(\n  /* script */\n  __webpack_require__(229),\n  /* template */\n  __webpack_require__(233),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"header_container\"\n  }, [_c('el-breadcrumb', {\n    attrs: {\n      \"separator\": \"/\"\n    }\n  }, [_c('el-breadcrumb-item', {\n    attrs: {\n      \"to\": {\n        path: '/manage'\n      }\n    }\n  }, [_vm._v(\"首页\")]), _vm._v(\" \"), _vm._l((_vm.$route.meta), function(item, index) {\n    return _c('el-breadcrumb-item', {\n      key: \"index\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('el-dropdown', {\n    attrs: {\n      \"menu-align\": \"start\"\n    }\n  }, [_c('img', {\n    staticClass: \"avator\",\n    attrs: {\n      \"src\": \"http://azz-test.oss-cn-shenzhen.aliyuncs.com/timg.jpeg\"\n    }\n  }), _vm._v(\" \"), _c('el-dropdown-menu', {\n    attrs: {\n      \"slot\": \"dropdown\"\n    },\n    slot: \"dropdown\"\n  }, [_c('el-dropdown-item', {\n    attrs: {\n      \"command\": \"home\"\n    }\n  }, [_vm._v(\"首页\")]), _vm._v(\" \"), _c('el-dropdown-item', {\n    attrs: {\n      \"command\": \"singout\"\n    }\n  }, [_c('a', {\n    on: {\n      \"click\": _vm.out\n    }\n  }, [_vm._v(\"退出\")])])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(426);\n\nvar zrUtil = __webpack_require__(228);\n\nvar colorTool = __webpack_require__(378);\n\nvar env = __webpack_require__(242);\n\nvar timsort = __webpack_require__(396);\n\nvar Eventful = __webpack_require__(251);\n\nvar GlobalModel = __webpack_require__(446);\n\nvar ExtensionAPI = __webpack_require__(433);\n\nvar CoordinateSystemManager = __webpack_require__(400);\n\nvar OptionManager = __webpack_require__(447);\n\nvar backwardCompat = __webpack_require__(454);\n\nvar ComponentModel = __webpack_require__(247);\n\nvar SeriesModel = __webpack_require__(406);\n\nvar ComponentView = __webpack_require__(431);\n\nvar ChartView = __webpack_require__(409);\n\nvar graphic = __webpack_require__(235);\n\nvar modelUtil = __webpack_require__(236);\n\nvar _throttle = __webpack_require__(402);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(459);\n\nvar loadingDefault = __webpack_require__(445);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(443);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar pathTool = __webpack_require__(494);\n\nvar colorTool = __webpack_require__(378);\n\nvar matrix = __webpack_require__(375);\n\nvar vector = __webpack_require__(238);\n\nvar Path = __webpack_require__(240);\n\nvar Transformable = __webpack_require__(425);\n\nvar Image = __webpack_require__(419);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(386);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(479);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(485);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(491);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(490);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(487);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(488);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(489);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(486);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(484);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(483);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(476);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(477);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(478);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(243);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar formatUtil = __webpack_require__(244);\n\nvar nubmerUtil = __webpack_require__(237);\n\nvar Model = __webpack_require__(245);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(397);\n\nvar zrUtil = __webpack_require__(228);\n\nvar PathProxy = __webpack_require__(387);\n\nvar pathContain = __webpack_require__(471);\n\nvar Pattern = __webpack_require__(420);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n/* 241 */,\n/* 242 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(238);\n\nvar matrix = __webpack_require__(375);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar textContain = __webpack_require__(249);\n\nvar numberUtil = __webpack_require__(237);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar clazzUtil = __webpack_require__(246);\n\nvar lineStyleMixin = __webpack_require__(452);\n\nvar areaStyleMixin = __webpack_require__(449);\n\nvar textStyleMixin = __webpack_require__(453);\n\nvar itemStyleMixin = __webpack_require__(451);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Model = __webpack_require__(245);\n\nvar componentUtil = __webpack_require__(392);\n\nvar clazzUtil = __webpack_require__(246);\n\nvar layout = __webpack_require__(248);\n\nvar boxLayoutMixin = __webpack_require__(450);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar BoundingRect = __webpack_require__(243);\n\nvar _number = __webpack_require__(237);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(244);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(243);\n\nvar imageHelper = __webpack_require__(399);\n\nvar _util = __webpack_require__(228);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(238);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */,\n/* 347 */,\n/* 348 */,\n/* 349 */,\n/* 350 */,\n/* 351 */,\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar textContain = __webpack_require__(249);\n\nvar OrdinalScale = __webpack_require__(457);\n\nvar IntervalScale = __webpack_require__(391);\n\nvar Scale = __webpack_require__(381);\n\nvar numberUtil = __webpack_require__(237);\n\n__webpack_require__(458);\n\n__webpack_require__(456);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(251);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(242);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(415);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n/* 379 */,\n/* 380 */,\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(246);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Element = __webpack_require__(410);\n\nvar BoundingRect = __webpack_require__(243);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(250);\n\nvar vec2 = __webpack_require__(238);\n\nvar bbox = __webpack_require__(416);\n\nvar BoundingRect = __webpack_require__(243);\n\nvar _config = __webpack_require__(385);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar Model = __webpack_require__(245);\n\nvar DataDiffer = __webpack_require__(404);\n\nvar modelUtil = __webpack_require__(236);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(49)))\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(237);\n\nvar formatUtil = __webpack_require__(244);\n\nvar Scale = __webpack_require__(381);\n\nvar helper = __webpack_require__(408);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar _clazz = __webpack_require__(246);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\nvar BoundingRect = __webpack_require__(243);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n/* 394 */,\n/* 395 */,\n/* 396 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Style = __webpack_require__(421);\n\nvar Element = __webpack_require__(410);\n\nvar RectText = __webpack_require__(482);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(415);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar _model = __webpack_require__(236);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar List = __webpack_require__(390);\n\nvar completeDimensions = __webpack_require__(401);\n\nvar _model = __webpack_require__(236);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(400);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar _format = __webpack_require__(244);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(246);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(236);\n\nvar ComponentModel = __webpack_require__(247);\n\nvar colorPaletteMixin = __webpack_require__(407);\n\nvar _layout = __webpack_require__(248);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(246);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(237);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Group = __webpack_require__(386);\n\nvar componentUtil = __webpack_require__(392);\n\nvar clazzUtil = __webpack_require__(246);\n\nvar modelUtil = __webpack_require__(236);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(417);\n\nvar Eventful = __webpack_require__(251);\n\nvar Transformable = __webpack_require__(425);\n\nvar Animatable = __webpack_require__(492);\n\nvar zrUtil = __webpack_require__(228);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(466);\n\nvar color = __webpack_require__(378);\n\nvar _util = __webpack_require__(228);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(238);\n\nvar curve = __webpack_require__(250);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(385);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(397);\n\nvar BoundingRect = __webpack_require__(243);\n\nvar zrUtil = __webpack_require__(228);\n\nvar imageHelper = __webpack_require__(399);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(481);\n\nvar smoothBezier = __webpack_require__(480);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(228);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(249);\n\nvar roundRectHelper = __webpack_require__(423);\n\nvar imageHelper = __webpack_require__(399);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(375);\n\nvar vector = __webpack_require__(238);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(417);\n\nvar env = __webpack_require__(242);\n\nvar zrUtil = __webpack_require__(228);\n\nvar Handler = __webpack_require__(461);\n\nvar Storage = __webpack_require__(464);\n\nvar Painter = __webpack_require__(463);\n\nvar Animation = __webpack_require__(465);\n\nvar HandlerProxy = __webpack_require__(475);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Model = __webpack_require__(245);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(248);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(244);\n\nvar graphic = __webpack_require__(235);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar numberUtil = __webpack_require__(237);\n\nvar axisHelper = __webpack_require__(376);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar axisHelper = __webpack_require__(376);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(386);\n\nvar componentUtil = __webpack_require__(392);\n\nvar clazzUtil = __webpack_require__(246);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(242);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar formatUtil = __webpack_require__(244);\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\n__webpack_require__(436);\n\n__webpack_require__(438);\n\n__webpack_require__(437);\n\nvar legendFilter = __webpack_require__(439);\n\nvar Component = __webpack_require__(247);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar Model = __webpack_require__(245);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar _symbol = __webpack_require__(393);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(235);\n\nvar _listComponent = __webpack_require__(428);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(248);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar graphic = __webpack_require__(235);\n\nvar _layout = __webpack_require__(248);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(243);\n\nvar bbox = __webpack_require__(416);\n\nvar vec2 = __webpack_require__(238);\n\nvar polygonContain = __webpack_require__(472);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Region = __webpack_require__(441);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(426);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(375);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(238);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(228);\n\nvar colorTool = __webpack_require__(378);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(235);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(237);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(244);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(402);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(444);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(390);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(245);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(429);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(242);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(442);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar createListFromArray = __webpack_require__(403);\n\nvar axisHelper = __webpack_require__(376);\n\nvar axisModelCommonMixin = __webpack_require__(430);\n\nvar Model = __webpack_require__(245);\n\nvar _completeDimensions = __webpack_require__(401);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(393);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar modelUtil = __webpack_require__(236);\n\nvar Model = __webpack_require__(245);\n\nvar ComponentModel = __webpack_require__(247);\n\nvar globalDefault = __webpack_require__(448);\n\nvar colorPaletteMinin = __webpack_require__(407);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar modelUtil = __webpack_require__(236);\n\nvar ComponentModel = __webpack_require__(247);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(388);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(388);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(388);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(249);\n\nvar graphicUtil = __webpack_require__(235);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(228);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(455);\n\nvar _model = __webpack_require__(236);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar modelUtil = __webpack_require__(236);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Scale = __webpack_require__(381);\n\nvar numberUtil = __webpack_require__(237);\n\nvar IntervalScale = __webpack_require__(391);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Scale = __webpack_require__(381);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar numberUtil = __webpack_require__(237);\n\nvar formatUtil = __webpack_require__(244);\n\nvar scaleHelper = __webpack_require__(408);\n\nvar IntervalScale = __webpack_require__(391);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(398);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 460 */,\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(228);\n\nvar vec2 = __webpack_require__(238);\n\nvar Draggable = __webpack_require__(493);\n\nvar Eventful = __webpack_require__(251);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(228);\n\nvar _config = __webpack_require__(385);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(421);\n\nvar Pattern = __webpack_require__(420);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(385);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(228);\n\nvar log = __webpack_require__(418);\n\nvar BoundingRect = __webpack_require__(243);\n\nvar timsort = __webpack_require__(396);\n\nvar Layer = __webpack_require__(462);\n\nvar requestAnimationFrame = __webpack_require__(412);\n\nvar Image = __webpack_require__(419);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar Group = __webpack_require__(386);\n\nvar timsort = __webpack_require__(396);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(228);\n\nvar _event = __webpack_require__(377);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(412);\n\nvar Animator = __webpack_require__(411);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(467);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(413);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(250);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(387);\n\nvar line = __webpack_require__(470);\n\nvar cubic = __webpack_require__(469);\n\nvar quadratic = __webpack_require__(473);\n\nvar arc = __webpack_require__(468);\n\nvar _util = __webpack_require__(413);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(250);\n\nvar windingLine = __webpack_require__(414);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(414);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(250);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(377);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(377);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(228);\n\nvar Eventful = __webpack_require__(251);\n\nvar env = __webpack_require__(242);\n\nvar GestureMgr = __webpack_require__(474);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Gradient = __webpack_require__(398);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Gradient = __webpack_require__(398);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(397);\n\nvar zrUtil = __webpack_require__(228);\n\nvar textContain = __webpack_require__(249);\n\nvar textHelper = __webpack_require__(424);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(238);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(238);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(424);\n\nvar BoundingRect = __webpack_require__(243);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar vec2 = __webpack_require__(238);\n\nvar _curve = __webpack_require__(250);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar polyHelper = __webpack_require__(422);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 488 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar polyHelper = __webpack_require__(422);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 489 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar roundRectHelper = __webpack_require__(423);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 490 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 491 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar fixClipWithShadow = __webpack_require__(432);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 492 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(411);\n\nvar log = __webpack_require__(418);\n\nvar _util = __webpack_require__(228);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n/* 493 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n/* 494 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar PathProxy = __webpack_require__(387);\n\nvar transformPath = __webpack_require__(495);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(387);\n\nvar _vector = __webpack_require__(238);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar _symbol = __webpack_require__(393);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(235);\n\nvar _number = __webpack_require__(237);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(613);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(235);\n\nvar SymbolClz = __webpack_require__(496);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(228);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(244);\n\nvar graphic = __webpack_require__(235);\n\nvar Model = __webpack_require__(245);\n\nvar _number = __webpack_require__(237);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(393);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(375);\n\nvar _vector = __webpack_require__(238);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(234);\n\nvar axisPointerModelHelper = __webpack_require__(427);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar modelUtil = __webpack_require__(236);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar modelUtil = __webpack_require__(236);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\nvar textContain = __webpack_require__(249);\n\nvar formatUtil = __webpack_require__(244);\n\nvar matrix = __webpack_require__(375);\n\nvar axisHelper = __webpack_require__(376);\n\nvar AxisBuilder = __webpack_require__(498);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar modelUtil = __webpack_require__(236);\n\nvar helper = __webpack_require__(434);\n\nvar AxisProxy = __webpack_require__(632);\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(431);\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\n__webpack_require__(509);\n\n__webpack_require__(624);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar ComponentModel = __webpack_require__(247);\n\nvar axisModelCreator = __webpack_require__(665);\n\nvar axisModelCommonMixin = __webpack_require__(430);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar BoundingRect = __webpack_require__(243);\n\nvar _layout = __webpack_require__(248);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(376);\n\nvar Cartesian2D = __webpack_require__(668);\n\nvar Axis2D = __webpack_require__(666);\n\nvar CoordinateSystem = __webpack_require__(400);\n\n__webpack_require__(669);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__ = __webpack_require__(234);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__ = __webpack_require__(607);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_chart_bar__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line__ = __webpack_require__(614);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_chart_line__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_title__ = __webpack_require__(440);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__ = __webpack_require__(435);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__ = __webpack_require__(652);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_markPoint__ = __webpack_require__(646);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_markPoint___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_markPoint__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_tooltip__ = __webpack_require__(660);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_tooltip__);\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    mounted: function mounted() {\n        this.myChart = __WEBPACK_IMPORTED_MODULE_0_echarts_lib_echarts___default.a.init(document.getElementById('line1'));\n        this.initData();\n    },\n\n    props: ['sevenDate', 'sevenDay'],\n    methods: {\n        initData: function initData() {\n            var colors = ['#d14a61', '#5793f3', '#675bba', '#13CE66'];\n            var option = {\n                color: colors,\n                title: {\n                    text: '注册人数',\n                    subtext: ''\n                },\n                tooltip: {\n                    trigger: 'axis'\n                },\n                legend: {\n                    data: ['API请求量', '新注册用户', '新增订单', '新增管理员']\n                },\n                toolbox: {\n                    show: true,\n                    feature: {\n                        dataZoom: {\n                            yAxisIndex: 'none'\n                        },\n                        dataView: { readOnly: false },\n                        magicType: { type: ['bar', 'line'] },\n                        restore: {}\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: false,\n                    data: this.sevenDay\n                },\n                yAxis: [{\n                    type: 'value',\n                    name: 'API请求量',\n                    min: 0,\n                    max: 200,\n                    position: 'left',\n                    axisLine: {\n                        lineStyle: {\n                            color: '#999'\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value}'\n                    }\n                }, {\n                    type: 'value',\n                    name: '用户、订单',\n                    min: 0,\n                    max: 400,\n                    position: 'right',\n                    axisLine: {\n                        lineStyle: {\n                            color: '#999'\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value}'\n                    }\n                }],\n                series: [{\n                    name: 'API请求量',\n                    type: 'line',\n                    data: this.sevenDate[0],\n                    markPoint: {\n                        data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n                    }\n                }, {\n                    name: '新注册用户',\n                    type: 'line',\n                    data: this.sevenDate[1],\n                    yAxisIndex: 1,\n                    markPoint: {\n                        data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n                    }\n                }, {\n                    name: '新增订单',\n                    type: 'line',\n                    data: this.sevenDate[2],\n                    yAxisIndex: 1,\n                    markPoint: {\n                        data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n                    }\n                }, {\n                    name: '新增管理员',\n                    type: 'line',\n                    data: this.sevenDate[3],\n                    yAxisIndex: 1,\n                    markPoint: {\n                        data: [{ type: 'max', name: '最大值' }, { type: 'min', name: '最小值' }]\n                    }\n                }]\n            };\n            this.myChart.setOption(option);\n        }\n    },\n    watch: {\n        sevenDate: function sevenDate() {\n            this.initData();\n        },\n        sevenDay: function sevenDay() {\n            this.initData();\n        }\n    }\n});\n\n/***/ }),\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */,\n/* 520 */,\n/* 521 */,\n/* 522 */,\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */,\n/* 527 */,\n/* 528 */,\n/* 529 */,\n/* 530 */,\n/* 531 */,\n/* 532 */,\n/* 533 */,\n/* 534 */,\n/* 535 */,\n/* 536 */,\n/* 537 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_headTop__ = __webpack_require__(232);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_headTop___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_headTop__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_tendency__ = __webpack_require__(729);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_tendency___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_tendency__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_time_formater__ = __webpack_require__(724);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_time_formater___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_time_formater__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__api_getData__ = __webpack_require__(85);\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            apiCount: 12,\n            userCount: 22,\n            orderCount: 21,\n            adminCount: 34,\n            allApiCount: 123,\n            allUserCount: 223,\n            allOrderCount: 123,\n            allAdminCount: 221,\n            sevenDay: [],\n            sevenDate: [[2, 13, 42, 11, 113, 42, 21], [22, 13, 42, 111, 21, 33, 11], [13, 42, 111, 21, 33, 11, 33], [111, 21, 33, 11, 43, 21, 74]]\n        };\n    },\n\n    components: {\n        headTop: __WEBPACK_IMPORTED_MODULE_2__components_headTop___default.a,\n        tendency: __WEBPACK_IMPORTED_MODULE_3__components_tendency___default.a\n    },\n    mounted: function mounted() {\n        this.initData();\n        for (var i = 6; i > -1; i--) {\n            var date = __WEBPACK_IMPORTED_MODULE_4_time_formater___default()(new Date().getTime() - 86400000 * i).format('YYYY-MM-DD');\n            this.sevenDay.push(date);\n        }\n        this.getSevenData();\n    },\n\n    computed: {\n        allApi: function allApi() {\n            return this.allApiCount < 10000 ? this.allApiCount : (this.allApiCount / 10000).toFixed(2);\n        }\n    },\n    methods: {\n        initData: function initData() {\n            var _this = this;\n\n            return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee() {\n                var today;\n                return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                today = __WEBPACK_IMPORTED_MODULE_4_time_formater___default()().format('YYYY-MM-DD');\n\n                            case 1:\n                            case 'end':\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, _this);\n            }))();\n        },\n        getSevenData: function getSevenData() {\n            var _this2 = this;\n\n            return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee2() {\n                var apiArr;\n                return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                apiArr = [[], [], [], []];\n\n                            case 1:\n                            case 'end':\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, _this2);\n            }))();\n        }\n    }\n});\n\n/***/ }),\n/* 538 */,\n/* 539 */,\n/* 540 */,\n/* 541 */,\n/* 542 */,\n/* 543 */,\n/* 544 */,\n/* 545 */,\n/* 546 */,\n/* 547 */,\n/* 548 */,\n/* 549 */,\n/* 550 */,\n/* 551 */,\n/* 552 */,\n/* 553 */,\n/* 554 */,\n/* 555 */,\n/* 556 */,\n/* 557 */,\n/* 558 */,\n/* 559 */,\n/* 560 */,\n/* 561 */,\n/* 562 */,\n/* 563 */,\n/* 564 */,\n/* 565 */,\n/* 566 */,\n/* 567 */,\n/* 568 */,\n/* 569 */,\n/* 570 */,\n/* 571 */,\n/* 572 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(186)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".allcover{position:absolute;top:0;right:0}.ctt{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ctt,.tb{position:absolute;top:50%}.tb{-webkit-transform:translateY(-50%);transform:translateY(-50%)}.lr{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.data_section{padding:20px;margin-bottom:40px}.data_section .section_title{text-align:center;font-size:30px;margin-bottom:10px}.data_section .data_list{text-align:center;font-size:14px;color:#666;border-radius:6px;background:#e5e9f2}.data_section .data_list .data_num{color:#333;font-size:26px}.data_section .data_list .head{border-radius:6px;font-size:24px;padding:0 10px;color:#fff}.data_section .today_head{background:#ff9800}.data_section .all_head{background:#20a0ff}.wan{font-size:16px;color:#333}\", \"\", {\"version\":3,\"sources\":[\"/Users/tusm/gitlab/arpt/aizazheng/src/page/home.vue\"],\"names\":[],\"mappings\":\"AACA,UACE,kBAAmB,AACnB,MAAO,AACP,OAAS,CACV,AACD,KAGE,SAAU,AACV,uCAAyC,AACjC,8BAAiC,CAC1C,AACD,SANE,kBAAmB,AACnB,OAAS,CAUV,AALD,IAGE,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,IACE,kBAAmB,AACnB,SAAU,AACV,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,cACE,aAAc,AACd,kBAAoB,CACrB,AACD,6BACE,kBAAmB,AACnB,eAAgB,AAChB,kBAAoB,CACrB,AACD,yBACE,kBAAmB,AACnB,eAAgB,AAChB,WAAY,AACZ,kBAAmB,AACnB,kBAAoB,CACrB,AACD,mCACE,WAAY,AACZ,cAAgB,CACjB,AACD,+BACE,kBAAmB,AACnB,eAAgB,AAChB,eAAgB,AAChB,UAAY,CACb,AACD,0BACE,kBAAoB,CACrB,AACD,wBACE,kBAAoB,CACrB,AACD,KACE,eAAgB,AAChB,UAAY,CACb\",\"file\":\"home.vue\",\"sourcesContent\":[\"\\n.allcover {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.ctt {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.tb {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.lr {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n}\\n.data_section {\\n  padding: 20px;\\n  margin-bottom: 40px;\\n}\\n.data_section .section_title {\\n  text-align: center;\\n  font-size: 30px;\\n  margin-bottom: 10px;\\n}\\n.data_section .data_list {\\n  text-align: center;\\n  font-size: 14px;\\n  color: #666;\\n  border-radius: 6px;\\n  background: #E5E9F2;\\n}\\n.data_section .data_list .data_num {\\n  color: #333;\\n  font-size: 26px;\\n}\\n.data_section .data_list .head {\\n  border-radius: 6px;\\n  font-size: 24px;\\n  padding: 0 10px;\\n  color: #fff;\\n}\\n.data_section .today_head {\\n  background: #FF9800;\\n}\\n.data_section .all_head {\\n  background: #20A0FF;\\n}\\n.wan {\\n  font-size: 16px;\\n  color: #333;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 573 */,\n/* 574 */,\n/* 575 */,\n/* 576 */,\n/* 577 */,\n/* 578 */,\n/* 579 */,\n/* 580 */,\n/* 581 */,\n/* 582 */,\n/* 583 */,\n/* 584 */,\n/* 585 */,\n/* 586 */,\n/* 587 */,\n/* 588 */,\n/* 589 */,\n/* 590 */,\n/* 591 */,\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(186)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".allcover{position:absolute;top:0;right:0}.ctt{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ctt,.tb{position:absolute;top:50%}.tb{-webkit-transform:translateY(-50%);transform:translateY(-50%)}.lr{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.line1{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/tusm/gitlab/arpt/aizazheng/src/components/tendency.vue\"],\"names\":[],\"mappings\":\"AACA,UACE,kBAAmB,AACnB,MAAO,AACP,OAAS,CACV,AACD,KAGE,SAAU,AACV,uCAAyC,AACjC,8BAAiC,CAC1C,AACD,SANE,kBAAmB,AACnB,OAAS,CAUV,AALD,IAGE,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,IACE,kBAAmB,AACnB,SAAU,AACV,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,OACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,wBAAyB,AACrB,qBAAsB,AAClB,sBAAwB,CACjC\",\"file\":\"tendency.vue\",\"sourcesContent\":[\"\\n.allcover {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.ctt {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.tb {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.lr {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n}\\n.line1 {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 603 */,\n/* 604 */,\n/* 605 */,\n/* 606 */,\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar barLayoutGrid = __webpack_require__(670);\n\n__webpack_require__(509);\n\n__webpack_require__(608);\n\n__webpack_require__(609);\n\n__webpack_require__(507);\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BaseBarSeries = __webpack_require__(610);\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 609 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\nvar _helper = __webpack_require__(612);\n\nvar setLabel = _helper.setLabel;\n\nvar Model = __webpack_require__(245);\n\nvar barItemStyle = __webpack_require__(611);\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 610 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SeriesModel = __webpack_require__(406);\n\nvar createListFromArray = __webpack_require__(403);\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 611 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(388);\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 612 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(235);\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n/***/ }),\n/* 613 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(236);\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n/***/ }),\n/* 614 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\n__webpack_require__(615);\n\n__webpack_require__(616);\n\nvar visualSymbol = __webpack_require__(675);\n\nvar layoutPoints = __webpack_require__(671);\n\nvar dataSample = __webpack_require__(673);\n\n__webpack_require__(507);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n/***/ }),\n/* 615 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(403);\n\nvar SeriesModel = __webpack_require__(406);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 616 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar SymbolDraw = __webpack_require__(497);\n\nvar SymbolClz = __webpack_require__(496);\n\nvar lineAnimationDiff = __webpack_require__(617);\n\nvar graphic = __webpack_require__(235);\n\nvar modelUtil = __webpack_require__(236);\n\nvar _poly = __webpack_require__(618);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(409);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 617 */\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 618 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(240);\n\nvar vec2 = __webpack_require__(238);\n\nvar fixClipWithShadow = __webpack_require__(432);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n/* 619 */,\n/* 620 */,\n/* 621 */,\n/* 622 */,\n/* 623 */,\n/* 624 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(508);\n\n__webpack_require__(625);\n\n/***/ }),\n/* 625 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\nvar AxisBuilder = __webpack_require__(498);\n\nvar AxisView = __webpack_require__(499);\n\nvar cartesianAxisHelper = __webpack_require__(500);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n/* 626 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar axisPointerModelHelper = __webpack_require__(427);\n\nvar axisTrigger = __webpack_require__(631);\n\n__webpack_require__(627);\n\n__webpack_require__(628);\n\n__webpack_require__(630);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n/* 627 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 628 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar globalListener = __webpack_require__(502);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n/* 629 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar clazzUtil = __webpack_require__(246);\n\nvar graphic = __webpack_require__(235);\n\nvar axisPointerModelHelper = __webpack_require__(427);\n\nvar eventTool = __webpack_require__(377);\n\nvar throttleUtil = __webpack_require__(402);\n\nvar modelUtil = __webpack_require__(236);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 630 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(235);\n\nvar BaseAxisPointer = __webpack_require__(629);\n\nvar viewHelper = __webpack_require__(503);\n\nvar cartesianAxisHelper = __webpack_require__(500);\n\nvar AxisView = __webpack_require__(499);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 631 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar modelUtil = __webpack_require__(236);\n\nvar modelHelper = __webpack_require__(427);\n\nvar findPointFromSeries = __webpack_require__(501);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 632 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar numberUtil = __webpack_require__(237);\n\nvar helper = __webpack_require__(434);\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 633 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(504);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(505);\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 635 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar helper = __webpack_require__(434);\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n/* 636 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n/***/ }),\n/* 637 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(247);\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n/* 638 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(637);\n\n__webpack_require__(504);\n\n__webpack_require__(505);\n\n__webpack_require__(633);\n\n__webpack_require__(634);\n\n__webpack_require__(636);\n\n__webpack_require__(635);\n\n/***/ }),\n/* 639 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar Eventful = __webpack_require__(251);\n\nvar graphic = __webpack_require__(235);\n\nvar interactionMutex = __webpack_require__(643);\n\nvar DataDiffer = __webpack_require__(404);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n/* 640 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(228);\n\nvar graphic = __webpack_require__(235);\n\nvar modelUtil = __webpack_require__(236);\n\nvar brushHelper = __webpack_require__(641);\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 641 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(243);\n\nvar _cursorHelper = __webpack_require__(642);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(235);\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n/* 642 */\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n/* 643 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n/* 644 */,\n/* 645 */\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 646 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\n__webpack_require__(647);\n\n__webpack_require__(648);\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n/***/ }),\n/* 647 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar MarkerModel = __webpack_require__(649);\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 648 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar SymbolDraw = __webpack_require__(497);\n\nvar numberUtil = __webpack_require__(237);\n\nvar List = __webpack_require__(390);\n\nvar markerHelper = __webpack_require__(651);\n\nvar MarkerView = __webpack_require__(650);\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 649 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(239);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar modelUtil = __webpack_require__(236);\n\nvar formatUtil = __webpack_require__(244);\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 650 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 651 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar numberUtil = __webpack_require__(237);\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n/***/ }),\n/* 652 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(653);\n\n__webpack_require__(654);\n\n__webpack_require__(659);\n\n__webpack_require__(657);\n\n__webpack_require__(655);\n\n__webpack_require__(656);\n\n__webpack_require__(658);\n\n/***/ }),\n/* 653 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar featureManager = __webpack_require__(389);\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 654 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar textContain = __webpack_require__(249);\n\nvar featureManager = __webpack_require__(389);\n\nvar graphic = __webpack_require__(235);\n\nvar Model = __webpack_require__(245);\n\nvar DataDiffer = __webpack_require__(404);\n\nvar listComponentHelper = __webpack_require__(428);\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 655 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar eventTool = __webpack_require__(377);\n\nvar lang = __webpack_require__(405);\n\nvar featureManager = __webpack_require__(389);\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n/* 656 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar BrushController = __webpack_require__(639);\n\nvar BrushTargetManager = __webpack_require__(640);\n\nvar history = __webpack_require__(506);\n\nvar sliderMove = __webpack_require__(645);\n\nvar lang = __webpack_require__(405);\n\nvar featureManager = __webpack_require__(389);\n\n__webpack_require__(638);\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n/* 657 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar lang = __webpack_require__(405);\n\nvar featureManager = __webpack_require__(389);\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n/* 658 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar history = __webpack_require__(506);\n\nvar lang = __webpack_require__(405);\n\nvar featureManager = __webpack_require__(389);\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n/* 659 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(242);\n\nvar lang = __webpack_require__(405);\n\nvar featureManager = __webpack_require__(389);\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 660 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\n__webpack_require__(626);\n\n__webpack_require__(662);\n\n__webpack_require__(663);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n/* 661 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar zrColor = __webpack_require__(378);\n\nvar eventUtil = __webpack_require__(377);\n\nvar env = __webpack_require__(242);\n\nvar formatUtil = __webpack_require__(244);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n/* 662 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 663 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(234);\n\nvar zrUtil = __webpack_require__(228);\n\nvar env = __webpack_require__(242);\n\nvar TooltipContent = __webpack_require__(661);\n\nvar formatUtil = __webpack_require__(244);\n\nvar numberUtil = __webpack_require__(237);\n\nvar graphic = __webpack_require__(235);\n\nvar findPointFromSeries = __webpack_require__(501);\n\nvar layoutUtil = __webpack_require__(248);\n\nvar Model = __webpack_require__(245);\n\nvar globalListener = __webpack_require__(502);\n\nvar axisHelper = __webpack_require__(376);\n\nvar axisPointerViewHelper = __webpack_require__(503);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 664 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n/* 665 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar axisDefault = __webpack_require__(664);\n\nvar ComponentModel = __webpack_require__(247);\n\nvar _layout = __webpack_require__(248);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 666 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Axis = __webpack_require__(429);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 667 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n/* 668 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar Cartesian = __webpack_require__(667);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 669 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(508);\n\nvar ComponentModel = __webpack_require__(247);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 670 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(228);\n\nvar _number = __webpack_require__(237);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n/***/ }),\n/* 671 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 672 */,\n/* 673 */\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 674 */,\n/* 675 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 676 */,\n/* 677 */,\n/* 678 */,\n/* 679 */,\n/* 680 */,\n/* 681 */,\n/* 682 */,\n/* 683 */,\n/* 684 */,\n/* 685 */,\n/* 686 */,\n/* 687 */,\n/* 688 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(572);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(187)(\"420bc70e\", content, true);\n\n/***/ }),\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */,\n/* 694 */,\n/* 695 */,\n/* 696 */,\n/* 697 */,\n/* 698 */,\n/* 699 */,\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */,\n/* 707 */,\n/* 708 */,\n/* 709 */,\n/* 710 */,\n/* 711 */,\n/* 712 */,\n/* 713 */,\n/* 714 */,\n/* 715 */,\n/* 716 */,\n/* 717 */,\n/* 718 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(602);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(187)(\"394c8530\", content, true);\n\n/***/ }),\n/* 719 */,\n/* 720 */,\n/* 721 */,\n/* 722 */,\n/* 723 */,\n/* 724 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(725);\n\n/***/ }),\n/* 725 */\n/***/ (function(module, exports) {\n\n\r\nvar TimeFormater = function (input) {\r\n  return new TimeFormater.fn.init(input);\r\n}\r\n\r\nTimeFormater.fn = TimeFormater.prototype = {\r\n  constructor: TimeFormater,\r\n  init: function (input) {\r\n    if (typeof input == 'string' || typeof input == 'number') {\r\n      this[0] = new Date(input);\r\n    } else if (input instanceof Date) {\r\n      this[0] = input;\r\n    } else {\r\n      this[0] = new Date();\r\n    }\r\n    return this;\r\n  },\r\n  format: function (str) {\r\n    var that = this;\r\n    if (typeof str === 'string') {\r\n      return str.replace(/Y{4}|M{1,4}|Do|D{1,2}|d{1,4}|Q|H{1,2}|h{1,2}|m{1,2}|s{1,2}|S{1,3}|A|a|x|X/g, function (match) {\r\n        return that[match] ? that[match]() : match;\r\n      });\r\n    } else {\r\n      return that.toLocaleString();\r\n    }\r\n  },\r\n  fromNow: function () {\r\n    var oldTime = this[0].getTime();\r\n    var newTime = Date.now();\r\n    var diff = parseInt(newTime - oldTime);\r\n    if (diff < 10000) {\r\n      return '刚刚';\r\n    } else if (diff < 60000) {\r\n      return parseInt(diff / 1000) + '秒前';\r\n    } else if (diff < 3600000) {\r\n      return parseInt(diff / 60000) + '分钟前';\r\n    } else if (diff < 86400000) {\r\n      return parseInt(diff / 3600000) + '小时前';\r\n    } else if (diff < 2592000000) {\r\n      return parseInt(diff / 86400000) + '天前';\r\n    } else if (diff < 31104000000) {\r\n      return parseInt(diff / 2592000000) + '月前';\r\n    } else {\r\n      return parseInt(diff / 31104000000) + '年前';\r\n    }\r\n  },\r\n  toDouble: function (num) {\r\n    return num < 10 ? '0' + num : num;\r\n  },\r\n  YYYY: function () {\r\n    return this[0].getFullYear();\r\n  },\r\n  Q: function () {\r\n    return Math.ceil(this.M() / 3);\r\n  },\r\n  M: function () {\r\n    return this[0].getMonth() + 1;\r\n  },\r\n  MM: function () {\r\n    return this.toDouble(this.M());\r\n  },\r\n  MMM: function () {\r\n    return this.M() + '月';\r\n  },\r\n  MMMM: function () {\r\n    var str = '一,二,三,四,五,六,七,八,九,十,十一,十二';\r\n    return str.split(',')[this.M() - 1] + '月';\r\n  },\r\n  D: function () {\r\n    return this[0].getDate();\r\n  },\r\n  Do: function () {\r\n    return this.D() + '日';\r\n  },\r\n  DD: function () {\r\n    return this.toDouble(this.D());\r\n  },\r\n  d: function () {\r\n    return this[0].getDay();\r\n  },\r\n  dd: function () {\r\n    var str = '日一二三四五六';\r\n    return str[this.d()];\r\n  },\r\n  ddd: function () {\r\n    return '周' + this.dd();\r\n  },\r\n  dddd: function () {\r\n    return '星期' + this.dd();\r\n  },\r\n  H: function () {\r\n    return this[0].getHours();\r\n  },\r\n  HH: function () {\r\n    return this.toDouble(this.H());\r\n  },\r\n  h: function () {\r\n    var hour = this.H();\r\n    return hour == 0 ? 12 : hour;\r\n  },\r\n  hh: function () {\r\n    return this.toDouble(this.h());\r\n  },\r\n  m: function () {\r\n    return this[0].getMinutes();\r\n  },\r\n  mm: function () {\r\n    return this.toDouble(this.m());\r\n  },\r\n  s: function () {\r\n    return this[0].getSeconds();\r\n  },\r\n  ss: function () {\r\n    return this.toDouble(this.s());\r\n  },\r\n  SSS: function () {\r\n    return this[0].getMilliseconds();\r\n  },\r\n  SS: function () {\r\n    return parseInt(this.SSS() / 10);\r\n  },\r\n  S: function () {\r\n    return parseInt(this.SS() / 10);\r\n  },\r\n  A: function () {\r\n    var hm = this.H() * 100 + this.m();\r\n    if (hm < 600) {\r\n      return '凌晨';\r\n    } else if (hm < 900) {\r\n      return '早上';\r\n    } else if (hm < 1130) {\r\n      return '上午';\r\n    } else if (hm < 1230) {\r\n      return '中午';\r\n    } else if (hm < 1800) {\r\n      return '下午';\r\n    } else {\r\n      return '晚上';\r\n    }\r\n  },\r\n  a: function () {\r\n    return this.A();\r\n  },\r\n  x: function () {\r\n    return this[0].getTime();\r\n  },\r\n  X: function () {\r\n    return parseInt(this.x() / 1000);\r\n  }\r\n};\r\n\r\nTimeFormater.fn.init.prototype = TimeFormater.fn;\r\n\r\nmodule.exports = TimeFormater;\n\n/***/ }),\n/* 726 */,\n/* 727 */,\n/* 728 */,\n/* 729 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(718)\n\nvar Component = __webpack_require__(84)(\n  /* script */\n  __webpack_require__(513),\n  /* template */\n  __webpack_require__(770),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 730 */,\n/* 731 */,\n/* 732 */,\n/* 733 */,\n/* 734 */,\n/* 735 */,\n/* 736 */,\n/* 737 */,\n/* 738 */,\n/* 739 */,\n/* 740 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('head-top'), _vm._v(\" \"), _c('section', {\n    staticClass: \"data_section\"\n  }, [_c('header', {\n    staticClass: \"section_title\"\n  }, [_vm._v(\"数据统计\")]), _vm._v(\" \"), _c('el-row', {\n    staticStyle: {\n      \"margin-bottom\": \"10px\"\n    },\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list today_head\"\n  }, [_c('span', {\n    staticClass: \"data_num head\"\n  }, [_vm._v(\"当日数据：\")])])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.apiCount))]), _vm._v(\" 颜值测试\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.userCount))]), _vm._v(\" 明星面对面\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.orderCount))]), _vm._v(\" 纹眉神器\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.adminCount))]), _vm._v(\" 抽奖游戏\")])])], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list all_head\"\n  }, [_c('span', {\n    staticClass: \"data_num head\"\n  }, [_vm._v(\"总数据：\")])])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allApi)), (_vm.allApiCount > 10000) ? _c('span', {\n    staticClass: \"wan\"\n  }, [_vm._v(\"万\")]) : _vm._e()]), _vm._v(\" 颜值测试\\n                    \")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allUserCount))]), _vm._v(\" 明星面对面\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allOrderCount))]), _vm._v(\" 纹眉神器\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allAdminCount))]), _vm._v(\" 抽奖游戏\")])])], 1)], 1), _vm._v(\" \"), _c('tendency', {\n    attrs: {\n      \"sevenDate\": _vm.sevenDate,\n      \"sevenDay\": _vm.sevenDay\n    }\n  })], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 741 */,\n/* 742 */,\n/* 743 */,\n/* 744 */,\n/* 745 */,\n/* 746 */,\n/* 747 */,\n/* 748 */,\n/* 749 */,\n/* 750 */,\n/* 751 */,\n/* 752 */,\n/* 753 */,\n/* 754 */,\n/* 755 */,\n/* 756 */,\n/* 757 */,\n/* 758 */,\n/* 759 */,\n/* 760 */,\n/* 761 */,\n/* 762 */,\n/* 763 */,\n/* 764 */,\n/* 765 */,\n/* 766 */,\n/* 767 */,\n/* 768 */,\n/* 769 */,\n/* 770 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0, false, false)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"line1\"\n  }, [_c('div', {\n    staticStyle: {\n      \"width\": \"90%\",\n      \"height\": \"450px\"\n    },\n    attrs: {\n      \"id\": \"line1\"\n    }\n  })])\n}]}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.26a59e88f166854c4cc0.js","\n/* styles */\nrequire(\"!!../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1dd06570\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./home.vue\")\n\nvar Component = require(\"!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./home.vue\"),\n  /* template */\n  require(\"!!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1dd06570\\\"}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./home.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/home.vue\n// module id = 210\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/util.js\n// module id = 228\n// module chunks = 0 1","<template>\n    <div class=\"header_container\">\n\n\t\t<el-breadcrumb separator=\"/\">\n\t\t\t<el-breadcrumb-item :to=\"{ path: '/manage' }\">首页</el-breadcrumb-item>\n\t\t\t<el-breadcrumb-item v-for=\"(item, index) in $route.meta\" key=\"index\">{{item}}</el-breadcrumb-item>\n\t\t</el-breadcrumb>\n\t\t<el-dropdown  menu-align='start'>\n\t\t\t<img src=\"http://azz-test.oss-cn-shenzhen.aliyuncs.com/timg.jpeg\" class=\"avator\">\n\t\t\t<el-dropdown-menu slot=\"dropdown\">\n\t\t\t\t<el-dropdown-item command=\"home\">首页</el-dropdown-item>\n\t\t\t\t<el-dropdown-item command=\"singout\"><a @click=\"out\">退出</a></el-dropdown-item>\n\t\t\t</el-dropdown-menu>\n\t\t</el-dropdown>\n    </div>\n</template>\n\n<script>\n\timport {signout,sysSignOut,clientSignOut} from '@/api/getData'\n\timport {baseImgPath} from '@/config/env'\n\timport {mapActions, mapState} from 'vuex'\n\n    export default {\n    \tdata(){\n    \t\treturn {\n    \t\t\tbaseImgPath,\n    \t\t}\n    \t},\n    \tcreated(){\n    \t\tif (!this.adminInfo._id) {\n    \t\t\t// this.getAdminData()\n    \t\t}\n    \t},\n    \tcomputed: {\n    \t\t...mapState(['adminInfo']),\n    \t},\n\t\tmethods: {\n\t\t\tout() {\n\t\t\t    this.$confirm('你将要退出登录', '提示', {\n\t\t\t      confirmButtonText: '确定',\n\t\t\t      cancelButtonText: '取消',\n\t\t\t      type: 'warning'\n\t\t\t    }).then(async () => {\n\t\t\t    \tif(localStorage.getItem('role') == \"1\"){\n\t\t\t\t\t\tlet\tsys = await sysSignOut()\n\t\t\t\t\t\tif(sys.code == 1){\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t        type: 'success',\n\t\t\t\t\t\t        message: '退出成功!'\n\t\t\t\t\t\t      });\n\t\t\t\t\t\t     this.$router.push('/')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t    \t}else{\n\t\t\t    \t\tlet\tclient = await clientSignOut()\n\t\t\t\t\t\tif(client.code == 1){\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t        type: 'success',\n\t\t\t\t\t\t        message: '退出成功!'\n\t\t\t\t\t\t      });\n\t\t\t\t\t\t     this.$router.push('/')\n\t\t\t\t\t\t}\n\t\t\t    \t}\n\t\t\t      \n\t\t\t    }).catch(() => {\n\t\t\t      this.$message({\n\t\t\t        type: 'info',\n\t\t\t        message: '已取消'\n\t\t\t      });          \n\t\t\t    });\n\t\t\t  },\n\t\t\t// ...mapActions(['getAdminData']),\n\t\t\tasync handleCommand(command) {\n\t\t\t\tif (command == 'home') {\n\t\t\t\t\tthis.$router.push('/manage');\n\t\t\t\t}else if(command == 'singout'){\n\t\t\t\t\tconst res = await signout()\n\t\t\t\t\tif (res.status == 1) {\n\t\t\t\t\t\tthis.$message({\n\t                        type: 'success',\n\t                        message: '退出成功'\n\t                    });\n\t                    this.$router.push('/');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.$message({\n\t                        type: 'error',\n\t                        message: res.message\n\t                    });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n</script>\n\n<style lang=\"less\">\n\t@import '../style/mixin';\n\t.header_container{\n\t\tbackground-color: #EFF2F7;\n\t\theight: 60px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding-left: 20px;\n\t}\n\t.avator{\n\t\t.wh(45px, 45px);\n\t\tborder-radius: 50%;\n\t\tmargin-right: 37px;\n\t}\n\t.el-dropdown-menu__item{\n        text-align: center;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// headTop.vue?65b32c0c","exports = module.exports = require(\"../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".allcover{position:absolute;top:0;right:0}.ctt{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ctt,.tb{position:absolute;top:50%}.tb{-webkit-transform:translateY(-50%);transform:translateY(-50%)}.lr{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.header_container{background-color:#eff2f7;height:60px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:20px}.avator{width:45px;height:45px;border-radius:50%;margin-right:37px}.el-dropdown-menu__item{text-align:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/tusm/gitlab/arpt/aizazheng/src/components/headTop.vue\"],\"names\":[],\"mappings\":\"AACA,UACE,kBAAmB,AACnB,MAAO,AACP,OAAS,CACV,AACD,KAGE,SAAU,AACV,uCAAyC,AACjC,8BAAiC,CAC1C,AACD,SANE,kBAAmB,AACnB,OAAS,CAUV,AALD,IAGE,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,IACE,kBAAmB,AACnB,SAAU,AACV,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,kBACE,yBAA0B,AAC1B,YAAa,AACb,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,yBAA0B,AACtB,sBAAuB,AACnB,8BAA+B,AACvC,yBAA0B,AACtB,sBAAuB,AACnB,mBAAoB,AAC5B,iBAAmB,CACpB,AACD,QACE,WAAY,AACZ,YAAa,AACb,kBAAmB,AACnB,iBAAmB,CACpB,AACD,wBACE,iBAAmB,CACpB\",\"file\":\"headTop.vue\",\"sourcesContent\":[\"\\n.allcover {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.ctt {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.tb {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.lr {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n}\\n.header_container {\\n  background-color: #EFF2F7;\\n  height: 60px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  padding-left: 20px;\\n}\\n.avator {\\n  width: 45px;\\n  height: 45px;\\n  border-radius: 50%;\\n  margin-right: 37px;\\n}\\n.el-dropdown-menu__item {\\n  text-align: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-43dadb43\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_less-loader@4.0.5@less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/headTop.vue\n// module id = 230\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-43dadb43\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_less-loader@4.0.5@less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./headTop.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/_vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"61dedae5\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@2.0.5@vue-style-loader!./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-43dadb43\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_less-loader@4.0.5@less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/headTop.vue\n// module id = 231\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","\n/* styles */\nrequire(\"!!../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-43dadb43\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./headTop.vue\")\n\nvar Component = require(\"!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./headTop.vue\"),\n  /* template */\n  require(\"!!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-43dadb43\\\"}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./headTop.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/headTop.vue\n// module id = 232\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"header_container\"\n  }, [_c('el-breadcrumb', {\n    attrs: {\n      \"separator\": \"/\"\n    }\n  }, [_c('el-breadcrumb-item', {\n    attrs: {\n      \"to\": {\n        path: '/manage'\n      }\n    }\n  }, [_vm._v(\"首页\")]), _vm._v(\" \"), _vm._l((_vm.$route.meta), function(item, index) {\n    return _c('el-breadcrumb-item', {\n      key: \"index\"\n    }, [_vm._v(_vm._s(item))])\n  })], 2), _vm._v(\" \"), _c('el-dropdown', {\n    attrs: {\n      \"menu-align\": \"start\"\n    }\n  }, [_c('img', {\n    staticClass: \"avator\",\n    attrs: {\n      \"src\": \"http://azz-test.oss-cn-shenzhen.aliyuncs.com/timg.jpeg\"\n    }\n  }), _vm._v(\" \"), _c('el-dropdown-menu', {\n    attrs: {\n      \"slot\": \"dropdown\"\n    },\n    slot: \"dropdown\"\n  }, [_c('el-dropdown-item', {\n    attrs: {\n      \"command\": \"home\"\n    }\n  }, [_vm._v(\"首页\")]), _vm._v(\" \"), _c('el-dropdown-item', {\n    attrs: {\n      \"command\": \"singout\"\n    }\n  }, [_c('a', {\n    on: {\n      \"click\": _vm.out\n    }\n  }, [_vm._v(\"退出\")])])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-43dadb43\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/headTop.vue\n// module id = 233\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/echarts.js\n// module id = 234\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/graphic.js\n// module id = 235\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/model.js\n// module id = 236\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/number.js\n// module id = 237\n// module chunks = 0 1","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/vector.js\n// module id = 238\n// module chunks = 0 1","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/config.js\n// module id = 239\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Path.js\n// module id = 240\n// module chunks = 0 1","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/env.js\n// module id = 242\n// module chunks = 0 1","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/BoundingRect.js\n// module id = 243\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/format.js\n// module id = 244\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/Model.js\n// module id = 245\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/clazz.js\n// module id = 246\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/Component.js\n// module id = 247\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/layout.js\n// module id = 248\n// module chunks = 0 1","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/text.js\n// module id = 249\n// module chunks = 0 1","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/curve.js\n// module id = 250\n// module chunks = 0 1","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/mixin/Eventful.js\n// module id = 251\n// module chunks = 0 1","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/matrix.js\n// module id = 375\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/axisHelper.js\n// module id = 376\n// module chunks = 0 1","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/event.js\n// module id = 377\n// module chunks = 0 1","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/tool/color.js\n// module id = 378\n// module chunks = 0 1","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/scale/Scale.js\n// module id = 381\n// module chunks = 0 1","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/config.js\n// module id = 385\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/container/Group.js\n// module id = 386\n// module chunks = 0 1","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/PathProxy.js\n// module id = 387\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 388\n// module chunks = 0 1","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/featureManager.js\n// module id = 389\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/data/List.js\n// module id = 390\n// module chunks = 0 1","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/scale/Interval.js\n// module id = 391\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/component.js\n// module id = 392\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/symbol.js\n// module id = 393\n// module chunks = 0 1","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/timsort.js\n// module id = 396\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Displayable.js\n// module id = 397\n// module chunks = 0 1","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Gradient.js\n// module id = 398\n// module chunks = 0 1","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/image.js\n// module id = 399\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/CoordinateSystem.js\n// module id = 400\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/data/helper/completeDimensions.js\n// module id = 401\n// module chunks = 0 1","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/util/throttle.js\n// module id = 402\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/helper/createListFromArray.js\n// module id = 403\n// module chunks = 0 1","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/data/DataDiffer.js\n// module id = 404\n// module chunks = 0 1","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/lang.js\n// module id = 405\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/Series.js\n// module id = 406\n// module chunks = 0 1","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/colorPalette.js\n// module id = 407\n// module chunks = 0 1","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/scale/helper.js\n// module id = 408\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/view/Chart.js\n// module id = 409\n// module chunks = 0 1","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/Element.js\n// module id = 410\n// module chunks = 0 1","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/animation/Animator.js\n// module id = 411\n// module chunks = 0 1","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/animation/requestAnimationFrame.js\n// module id = 412\n// module chunks = 0 1","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/util.js\n// module id = 413\n// module chunks = 0 1","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/windingLine.js\n// module id = 414\n// module chunks = 0 1","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/LRU.js\n// module id = 415\n// module chunks = 0 1","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/bbox.js\n// module id = 416\n// module chunks = 0 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/guid.js\n// module id = 417\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/log.js\n// module id = 418\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Image.js\n// module id = 419\n// module chunks = 0 1","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Pattern.js\n// module id = 420\n// module chunks = 0 1","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Style.js\n// module id = 421\n// module chunks = 0 1","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/poly.js\n// module id = 422\n// module chunks = 0 1","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/roundRect.js\n// module id = 423\n// module chunks = 0 1","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/text.js\n// module id = 424\n// module chunks = 0 1","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/mixin/Transformable.js\n// module id = 425\n// module chunks = 0 1","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/zrender.js\n// module id = 426\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/modelHelper.js\n// module id = 427\n// module chunks = 0","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/listComponent.js\n// module id = 428\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/Axis.js\n// module id = 429\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 430\n// module chunks = 0 1","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/view/Component.js\n// module id = 431\n// module chunks = 0 1","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 432\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/ExtensionAPI.js\n// module id = 433\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/helper.js\n// module id = 434\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/legend.js\n// module id = 435\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/legend/LegendModel.js\n// module id = 436\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/legend/LegendView.js\n// module id = 437\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/legend/legendAction.js\n// module id = 438\n// module chunks = 0 1","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/legend/legendFilter.js\n// module id = 439\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/title.js\n// module id = 440\n// module chunks = 0 1","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/geo/Region.js\n// module id = 441\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/geo/parseGeoJson.js\n// module id = 442\n// module chunks = 0 1","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/export.js\n// module id = 443\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/helper.js\n// module id = 444\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/loading/default.js\n// module id = 445\n// module chunks = 0 1","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/Global.js\n// module id = 446\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/OptionManager.js\n// module id = 447\n// module chunks = 0 1","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/globalDefault.js\n// module id = 448\n// module chunks = 0 1","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/areaStyle.js\n// module id = 449\n// module chunks = 0 1","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/boxLayout.js\n// module id = 450\n// module chunks = 0 1","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/itemStyle.js\n// module id = 451\n// module chunks = 0 1","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/lineStyle.js\n// module id = 452\n// module chunks = 0 1","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/model/mixin/textStyle.js\n// module id = 453\n// module chunks = 0 1","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/preprocessor/backwardCompat.js\n// module id = 454\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 455\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/scale/Log.js\n// module id = 456\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/scale/Ordinal.js\n// module id = 457\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/scale/Time.js\n// module id = 458\n// module chunks = 0 1","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/visual/seriesColor.js\n// module id = 459\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/Handler.js\n// module id = 461\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/Layer.js\n// module id = 462\n// module chunks = 0 1","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/Painter.js\n// module id = 463\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/Storage.js\n// module id = 464\n// module chunks = 0 1","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/animation/Animation.js\n// module id = 465\n// module chunks = 0 1","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/animation/Clip.js\n// module id = 466\n// module chunks = 0 1","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/animation/easing.js\n// module id = 467\n// module chunks = 0 1","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/arc.js\n// module id = 468\n// module chunks = 0 1","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/cubic.js\n// module id = 469\n// module chunks = 0 1","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/line.js\n// module id = 470\n// module chunks = 0 1","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/path.js\n// module id = 471\n// module chunks = 0 1","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/polygon.js\n// module id = 472\n// module chunks = 0 1","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/contain/quadratic.js\n// module id = 473\n// module chunks = 0 1","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/core/GestureMgr.js\n// module id = 474\n// module chunks = 0 1","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/dom/HandlerProxy.js\n// module id = 475\n// module chunks = 0 1","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/CompoundPath.js\n// module id = 476\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/LinearGradient.js\n// module id = 477\n// module chunks = 0 1","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/RadialGradient.js\n// module id = 478\n// module chunks = 0 1","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/Text.js\n// module id = 479\n// module chunks = 0 1","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 480\n// module chunks = 0 1","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 481\n// module chunks = 0 1","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/mixin/RectText.js\n// module id = 482\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Arc.js\n// module id = 483\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 484\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Circle.js\n// module id = 485\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Line.js\n// module id = 486\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Polygon.js\n// module id = 487\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Polyline.js\n// module id = 488\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Rect.js\n// module id = 489\n// module chunks = 0 1","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Ring.js\n// module id = 490\n// module chunks = 0 1","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/graphic/shape/Sector.js\n// module id = 491\n// module chunks = 0 1","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/mixin/Animatable.js\n// module id = 492\n// module chunks = 0 1","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/mixin/Draggable.js\n// module id = 493\n// module chunks = 0 1","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/tool/path.js\n// module id = 494\n// module chunks = 0 1","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.7.4@zrender/lib/tool/transformPath.js\n// module id = 495\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/helper/Symbol.js\n// module id = 496\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 497\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axis/AxisBuilder.js\n// module id = 498\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axis/AxisView.js\n// module id = 499\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 500\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 501\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/globalListener.js\n// module id = 502\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/viewHelper.js\n// module id = 503\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 504\n// module chunks = 0","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 505\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/history.js\n// module id = 506\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/gridSimple.js\n// module id = 507\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 508\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Grid.js\n// module id = 509\n// module chunks = 0","<template>\n    <div class=\"line1\">\n        <div id=\"line1\" class=\"\" style=\"width: 90%;height:450px;\"></div>\n    </div>\n</template>\n\n<script>\n    import echarts from 'echarts/lib/echarts';\n    // 引入柱状图\n    import 'echarts/lib/chart/bar';\n    import 'echarts/lib/chart/line';\n    import 'echarts/lib/component/title';\n    import 'echarts/lib/component/legend';\n    import 'echarts/lib/component/toolbox';\n    import 'echarts/lib/component/markPoint';\n    import 'echarts/lib/component/tooltip';\n    export default {\n        mounted(){\n            this.myChart = echarts.init(document.getElementById('line1'));\n            this.initData();\n        },\n        props: ['sevenDate', 'sevenDay'],\n        methods: {\n            initData(){\n                const colors = ['#d14a61', '#5793f3', '#675bba', '#13CE66'];\n                const option = {\n                    color: colors,\n                    title: {\n                        text: '注册人数',\n                        subtext: ''\n                    },\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data:['API请求量', '新注册用户', '新增订单', '新增管理员']\n                    },\n                    toolbox: {\n                        show: true,\n                        feature: {\n                            dataZoom: {\n                                yAxisIndex: 'none'\n                            },\n                            dataView: {readOnly: false},\n                            magicType: {type: ['bar', 'line']},\n                            restore: {},\n                        }\n                    },\n                    xAxis:  {\n                        type: 'category',\n                        boundaryGap: false,\n                        data: this.sevenDay\n                    },\n                    yAxis: [\n                        {\n                          type: 'value',\n                          name: 'API请求量',\n                          min: 0,\n                          max: 200,\n                          position: 'left',\n                          axisLine: {\n                              lineStyle: {\n                                  color: '#999'\n                              }\n                          },\n                          axisLabel: {\n                              formatter: '{value}'\n                          }\n                        },\n                        {\n                          type: 'value',\n                          name: '用户、订单',\n                          min: 0,\n                          max: 400,\n                          position: 'right',\n                          axisLine: {\n                              lineStyle: {\n                                  color: '#999'\n                              }\n                          },\n                          axisLabel: {\n                              formatter: '{value}'\n                          }\n                        },\n                    ],\n                    series: [\n                        {\n                            name:'API请求量',\n                            type:'line',\n                            data:this.sevenDate[0],\n                            markPoint: {\n                                data: [\n                                    {type: 'max', name: '最大值'},\n                                    {type: 'min', name: '最小值'}\n                                ]\n                            },\n                        },\n                        {\n                            name:'新注册用户',\n                            type:'line',\n                            data:this.sevenDate[1],\n                            yAxisIndex: 1,\n                            markPoint: {\n                                data: [\n                                    {type: 'max', name: '最大值'},\n                                    {type: 'min', name: '最小值'}\n                                ]\n                            },\n                        },\n                        {\n                            name:'新增订单',\n                            type:'line',\n                            data:this.sevenDate[2],\n                            yAxisIndex: 1,\n                            markPoint: {\n                                data: [\n                                    {type: 'max', name: '最大值'},\n                                    {type: 'min', name: '最小值'}\n                                ]\n                            },\n                        },\n                        {\n                            name:'新增管理员',\n                            type:'line',\n                            data:this.sevenDate[3],\n                            yAxisIndex: 1,\n                            markPoint: {\n                                data: [\n                                    {type: 'max', name: '最大值'},\n                                    {type: 'min', name: '最小值'}\n                                ]\n                            },\n                        }\n                    ]\n              };\n                this.myChart.setOption(option);\n            }\n        },\n        watch: {\n            sevenDate: function (){\n                this.initData()\n            },\n            sevenDay: function (){\n                this.initData()\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\">\n\t@import '../style/mixin';\n    .line1{\n        display: flex;\n        justify-content: center;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// tendency.vue?274b2c37","<template>\n    <div>\n        <head-top></head-top>\n\t\t<section class=\"data_section\">\n\t\t\t<header class=\"section_title\">数据统计</header>\n\t\t\t<el-row :gutter=\"20\" style=\"margin-bottom: 10px;\">\n                <el-col :span=\"5\"><div class=\"data_list today_head\"><span class=\"data_num head\">当日数据：</span></div></el-col>\n\t\t\t\t<el-col :span=\"5\"><div class=\"data_list\"><span class=\"data_num\">{{apiCount}}</span> 颜值测试</div></el-col>\n\t\t\t\t<el-col :span=\"4\"><div class=\"data_list\"><span class=\"data_num\">{{userCount}}</span> 明星面对面</div></el-col>\n\t\t\t\t<el-col :span=\"4\"><div class=\"data_list\"><span class=\"data_num\">{{orderCount}}</span> 纹眉神器</div></el-col>\n                <el-col :span=\"4\"><div class=\"data_list\"><span class=\"data_num\">{{adminCount}}</span> 抽奖游戏</div></el-col>\n\t\t\t</el-row>\n            <el-row :gutter=\"20\">\n                <el-col :span=\"5\"><div class=\"data_list all_head\"><span class=\"data_num head\">总数据：</span></div></el-col>\n                <el-col :span=\"5\">\n                    <div class=\"data_list\">\n                        <span class=\"data_num\">{{allApi}}<span class=\"wan\" v-if=\"allApiCount > 10000\">万</span>\n                        </span> 颜值测试\n                    </div>\n                </el-col>\n                <el-col :span=\"4\"><div class=\"data_list\"><span class=\"data_num\">{{allUserCount}}</span> 明星面对面</div></el-col>\n                <el-col :span=\"4\"><div class=\"data_list\"><span class=\"data_num\">{{allOrderCount}}</span> 纹眉神器</div></el-col>\n                <el-col :span=\"4\"><div class=\"data_list\"><span class=\"data_num\">{{allAdminCount}}</span> 抽奖游戏</div></el-col>\n            </el-row>\n\t\t</section>\n\t\t<tendency :sevenDate='sevenDate' :sevenDay='sevenDay'></tendency>\n    </div>\n</template>\n\n<script>\n\timport headTop from '../components/headTop'\n\timport tendency from '../components/tendency' \n\timport dtime from 'time-formater'\n\timport {apiCount, userCount, orderCount, apiAllCount, getUserCount, getOrderCount, adminDayCount, adminCount} from '@/api/getData'\n    export default {\n    \tdata(){\n    \t\treturn {\n    \t\t\tapiCount: 12,\n    \t\t\tuserCount: 22,\n    \t\t\torderCount: 21,\n                adminCount: 34,\n                allApiCount: 123,\n                allUserCount: 223,\n                allOrderCount: 123,\n                allAdminCount: 221,\n    \t\t\tsevenDay: [],\n    \t\t\tsevenDate: [[2,13,42,11,113,42,21],[22,13,42,111,21,33,11],[13,42,111,21,33,11,33],[111,21,33,11,43,21,74]],\n    \t\t}\n    \t},\n    \tcomponents: {\n    \t\theadTop,\n    \t\ttendency,\n    \t},\n    \tmounted(){\n    \t\tthis.initData();\n    \t\tfor (let i = 6; i > -1; i--) {\n    \t\t\tconst date = dtime(new Date().getTime() - 86400000*i).format('YYYY-MM-DD')\n    \t\t\tthis.sevenDay.push(date)\n    \t\t}\n    \t\tthis.getSevenData();\n    \t},\n        computed: {\n            allApi: function (){\n                return this.allApiCount < 10000 ? this.allApiCount : (this.allApiCount/10000).toFixed(2)\n            }\n        },\n    \tmethods: {\n    \t\tasync initData(){\n    \t\t\tconst today = dtime().format('YYYY-MM-DD')\n    \t\t\t// Promise.all([apiCount(today), userCount(today), orderCount(today), adminDayCount(today), apiAllCount(), getUserCount(), getOrderCount(), adminCount()])\n    \t\t\t// .then(res => {\n    \t\t\t\t// this.apiCount = res[0].count;\n    \t\t\t\t// this.userCount = res[1].count;\n    \t\t\t\t// this.orderCount = res[2].count;\n        //             this.adminCount = res[3].count;\n        //             this.allApiCount = res[4].count;\n        //             this.allUserCount = res[5].count;\n        //             this.allOrderCount = res[6].count;\n        //             this.allAdminCount = res[7].count;\n    \t\t\t// }).catch(err => {\n    \t\t\t// \tconsole.log(err)\n    \t\t\t// })\n    \t\t},\n    \t\tasync getSevenData(){\n    \t\t\tconst apiArr = [[],[],[],[]];\n    \t// \t\tthis.sevenDay.forEach(item => {\n    \t// \t\t\tapiArr[0].push(apiCount(item))\n    \t// \t\t\tapiArr[1].push(userCount(item))\n    \t// \t\t\tapiArr[2].push(orderCount(item))\n     //                apiArr[3].push(adminDayCount(item))\n    \t// \t\t})\n    \t// \t\tconst promiseArr = [...apiArr[0], ...apiArr[1], ...apiArr[2], ...apiArr[3]]\n    \t// \t\tPromise.all(promiseArr).then(res => {\n    \t// \t\t\tconst resArr = [[],[],[],[]];\n\t\t\t\t\t// res.forEach((item, index) => {\n\t\t\t\t\t// \tif (item.status == 1) {\n\t\t\t\t\t// \t\tresArr[Math.floor(index/7)].push(item.count)\n\t\t\t\t\t// \t}\n\t\t\t\t\t// })\n\t\t\t\t\t// this.sevenDate = resArr;\n    \t// \t\t}).catch(err => {\n    \t// \t\t\tconsole.log(err)\n    \t// \t\t})\n    \t\t}\n    \t}\n    }\n</script>\n\n<style lang=\"less\">\n\t@import '../style/mixin';\n\t.data_section{\n\t\tpadding: 20px;\n\t\tmargin-bottom: 40px;\n\t\t.section_title{\n\t\t\ttext-align: center;\n\t\t\tfont-size: 30px;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\t\t.data_list{\n\t\t\ttext-align: center;\n\t\t\tfont-size: 14px;\n\t\t\tcolor: #666;\n            border-radius: 6px;\n            background: #E5E9F2;\n            .data_num{\n                color: #333;\n                font-size: 26px;\n\n            }\n            .head{\n                border-radius: 6px;\n                font-size: 24px;\n                padding: 0 10px;\n                color: #fff;\n            }\n        }\n        .today_head{\n            background: #FF9800;\n        }\n        .all_head{\n            background: #20A0FF;\n        }\n\t}\n    .wan{\n        .sc(16px, #333)\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// home.vue?5b0606b8","exports = module.exports = require(\"../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".allcover{position:absolute;top:0;right:0}.ctt{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ctt,.tb{position:absolute;top:50%}.tb{-webkit-transform:translateY(-50%);transform:translateY(-50%)}.lr{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.data_section{padding:20px;margin-bottom:40px}.data_section .section_title{text-align:center;font-size:30px;margin-bottom:10px}.data_section .data_list{text-align:center;font-size:14px;color:#666;border-radius:6px;background:#e5e9f2}.data_section .data_list .data_num{color:#333;font-size:26px}.data_section .data_list .head{border-radius:6px;font-size:24px;padding:0 10px;color:#fff}.data_section .today_head{background:#ff9800}.data_section .all_head{background:#20a0ff}.wan{font-size:16px;color:#333}\", \"\", {\"version\":3,\"sources\":[\"/Users/tusm/gitlab/arpt/aizazheng/src/page/home.vue\"],\"names\":[],\"mappings\":\"AACA,UACE,kBAAmB,AACnB,MAAO,AACP,OAAS,CACV,AACD,KAGE,SAAU,AACV,uCAAyC,AACjC,8BAAiC,CAC1C,AACD,SANE,kBAAmB,AACnB,OAAS,CAUV,AALD,IAGE,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,IACE,kBAAmB,AACnB,SAAU,AACV,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,cACE,aAAc,AACd,kBAAoB,CACrB,AACD,6BACE,kBAAmB,AACnB,eAAgB,AAChB,kBAAoB,CACrB,AACD,yBACE,kBAAmB,AACnB,eAAgB,AAChB,WAAY,AACZ,kBAAmB,AACnB,kBAAoB,CACrB,AACD,mCACE,WAAY,AACZ,cAAgB,CACjB,AACD,+BACE,kBAAmB,AACnB,eAAgB,AAChB,eAAgB,AAChB,UAAY,CACb,AACD,0BACE,kBAAoB,CACrB,AACD,wBACE,kBAAoB,CACrB,AACD,KACE,eAAgB,AAChB,UAAY,CACb\",\"file\":\"home.vue\",\"sourcesContent\":[\"\\n.allcover {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.ctt {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.tb {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.lr {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n}\\n.data_section {\\n  padding: 20px;\\n  margin-bottom: 40px;\\n}\\n.data_section .section_title {\\n  text-align: center;\\n  font-size: 30px;\\n  margin-bottom: 10px;\\n}\\n.data_section .data_list {\\n  text-align: center;\\n  font-size: 14px;\\n  color: #666;\\n  border-radius: 6px;\\n  background: #E5E9F2;\\n}\\n.data_section .data_list .data_num {\\n  color: #333;\\n  font-size: 26px;\\n}\\n.data_section .data_list .head {\\n  border-radius: 6px;\\n  font-size: 24px;\\n  padding: 0 10px;\\n  color: #fff;\\n}\\n.data_section .today_head {\\n  background: #FF9800;\\n}\\n.data_section .all_head {\\n  background: #20A0FF;\\n}\\n.wan {\\n  font-size: 16px;\\n  color: #333;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-1dd06570\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_less-loader@4.0.5@less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/page/home.vue\n// module id = 572\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".allcover{position:absolute;top:0;right:0}.ctt{left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ctt,.tb{position:absolute;top:50%}.tb{-webkit-transform:translateY(-50%);transform:translateY(-50%)}.lr{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.line1{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}\", \"\", {\"version\":3,\"sources\":[\"/Users/tusm/gitlab/arpt/aizazheng/src/components/tendency.vue\"],\"names\":[],\"mappings\":\"AACA,UACE,kBAAmB,AACnB,MAAO,AACP,OAAS,CACV,AACD,KAGE,SAAU,AACV,uCAAyC,AACjC,8BAAiC,CAC1C,AACD,SANE,kBAAmB,AACnB,OAAS,CAUV,AALD,IAGE,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,IACE,kBAAmB,AACnB,SAAU,AACV,mCAAoC,AAC5B,0BAA4B,CACrC,AACD,OACE,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,wBAAyB,AACrB,qBAAsB,AAClB,sBAAwB,CACjC\",\"file\":\"tendency.vue\",\"sourcesContent\":[\"\\n.allcover {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n.ctt {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.tb {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.lr {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n}\\n.line1 {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-cb240c70\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_less-loader@4.0.5@less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/tendency.vue\n// module id = 602\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/bar.js\n// module id = 607\n// module chunks = 0","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/bar/BarSeries.js\n// module id = 608\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/bar/BarView.js\n// module id = 609\n// module chunks = 0","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 610\n// module chunks = 0","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/bar/barItemStyle.js\n// module id = 611\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/bar/helper.js\n// module id = 612\n// module chunks = 0","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/helper/labelHelper.js\n// module id = 613\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/line.js\n// module id = 614\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/line/LineSeries.js\n// module id = 615\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/line/LineView.js\n// module id = 616\n// module chunks = 0","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 617\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/chart/line/poly.js\n// module id = 618\n// module chunks = 0","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axis.js\n// module id = 624\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axis/CartesianAxisView.js\n// module id = 625\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer.js\n// module id = 626\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 627\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 628\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 629\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 630\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 631\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 632\n// module chunks = 0","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 633\n// module chunks = 0","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 634\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 635\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 636\n// module chunks = 0","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 637\n// module chunks = 0","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/dataZoomSelect.js\n// module id = 638\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/BrushController.js\n// module id = 639\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/BrushTargetManager.js\n// module id = 640\n// module chunks = 0","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/brushHelper.js\n// module id = 641\n// module chunks = 0","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/cursorHelper.js\n// module id = 642\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/interactionMutex.js\n// module id = 643\n// module chunks = 0","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/helper/sliderMove.js\n// module id = 645\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/markPoint.js\n// module id = 646\n// module chunks = 0","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/marker/MarkPointModel.js\n// module id = 647\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/marker/MarkPointView.js\n// module id = 648\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/marker/MarkerModel.js\n// module id = 649\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/marker/MarkerView.js\n// module id = 650\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/marker/markerHelper.js\n// module id = 651\n// module chunks = 0","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox.js\n// module id = 652\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 653\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/ToolboxView.js\n// module id = 654\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/DataView.js\n// module id = 655\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 656\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 657\n// module chunks = 0","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/Restore.js\n// module id = 658\n// module chunks = 0","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 659\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/tooltip.js\n// module id = 660\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 661\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 662\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipView.js\n// module id = 663\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/axisDefault.js\n// module id = 664\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/axisModelCreator.js\n// module id = 665\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 666\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 667\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 668\n// module chunks = 0","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/coord/cartesian/GridModel.js\n// module id = 669\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/layout/barGrid.js\n// module id = 670\n// module chunks = 0","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/layout/points.js\n// module id = 671\n// module chunks = 0","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/processor/dataSample.js\n// module id = 673\n// module chunks = 0","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.8.5@echarts/lib/visual/symbol.js\n// module id = 675\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-1dd06570\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_less-loader@4.0.5@less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./home.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/_vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"420bc70e\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@2.0.5@vue-style-loader!./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-1dd06570\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_less-loader@4.0.5@less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/page/home.vue\n// module id = 688\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-cb240c70\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/_less-loader@4.0.5@less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./tendency.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/_vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"394c8530\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@2.0.5@vue-style-loader!./~/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/style-compiler?{\"id\":\"data-v-cb240c70\",\"scoped\":false,\"hasInlineConfig\":false}!./~/_less-loader@4.0.5@less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=styles&index=0!./src/components/tendency.vue\n// module id = 718\n// module chunks = 0","module.exports = require('./timeformater');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_time-formater@1.0.1@time-formater/index.js\n// module id = 724\n// module chunks = 0","\r\nvar TimeFormater = function (input) {\r\n  return new TimeFormater.fn.init(input);\r\n}\r\n\r\nTimeFormater.fn = TimeFormater.prototype = {\r\n  constructor: TimeFormater,\r\n  init: function (input) {\r\n    if (typeof input == 'string' || typeof input == 'number') {\r\n      this[0] = new Date(input);\r\n    } else if (input instanceof Date) {\r\n      this[0] = input;\r\n    } else {\r\n      this[0] = new Date();\r\n    }\r\n    return this;\r\n  },\r\n  format: function (str) {\r\n    var that = this;\r\n    if (typeof str === 'string') {\r\n      return str.replace(/Y{4}|M{1,4}|Do|D{1,2}|d{1,4}|Q|H{1,2}|h{1,2}|m{1,2}|s{1,2}|S{1,3}|A|a|x|X/g, function (match) {\r\n        return that[match] ? that[match]() : match;\r\n      });\r\n    } else {\r\n      return that.toLocaleString();\r\n    }\r\n  },\r\n  fromNow: function () {\r\n    var oldTime = this[0].getTime();\r\n    var newTime = Date.now();\r\n    var diff = parseInt(newTime - oldTime);\r\n    if (diff < 10000) {\r\n      return '刚刚';\r\n    } else if (diff < 60000) {\r\n      return parseInt(diff / 1000) + '秒前';\r\n    } else if (diff < 3600000) {\r\n      return parseInt(diff / 60000) + '分钟前';\r\n    } else if (diff < 86400000) {\r\n      return parseInt(diff / 3600000) + '小时前';\r\n    } else if (diff < 2592000000) {\r\n      return parseInt(diff / 86400000) + '天前';\r\n    } else if (diff < 31104000000) {\r\n      return parseInt(diff / 2592000000) + '月前';\r\n    } else {\r\n      return parseInt(diff / 31104000000) + '年前';\r\n    }\r\n  },\r\n  toDouble: function (num) {\r\n    return num < 10 ? '0' + num : num;\r\n  },\r\n  YYYY: function () {\r\n    return this[0].getFullYear();\r\n  },\r\n  Q: function () {\r\n    return Math.ceil(this.M() / 3);\r\n  },\r\n  M: function () {\r\n    return this[0].getMonth() + 1;\r\n  },\r\n  MM: function () {\r\n    return this.toDouble(this.M());\r\n  },\r\n  MMM: function () {\r\n    return this.M() + '月';\r\n  },\r\n  MMMM: function () {\r\n    var str = '一,二,三,四,五,六,七,八,九,十,十一,十二';\r\n    return str.split(',')[this.M() - 1] + '月';\r\n  },\r\n  D: function () {\r\n    return this[0].getDate();\r\n  },\r\n  Do: function () {\r\n    return this.D() + '日';\r\n  },\r\n  DD: function () {\r\n    return this.toDouble(this.D());\r\n  },\r\n  d: function () {\r\n    return this[0].getDay();\r\n  },\r\n  dd: function () {\r\n    var str = '日一二三四五六';\r\n    return str[this.d()];\r\n  },\r\n  ddd: function () {\r\n    return '周' + this.dd();\r\n  },\r\n  dddd: function () {\r\n    return '星期' + this.dd();\r\n  },\r\n  H: function () {\r\n    return this[0].getHours();\r\n  },\r\n  HH: function () {\r\n    return this.toDouble(this.H());\r\n  },\r\n  h: function () {\r\n    var hour = this.H();\r\n    return hour == 0 ? 12 : hour;\r\n  },\r\n  hh: function () {\r\n    return this.toDouble(this.h());\r\n  },\r\n  m: function () {\r\n    return this[0].getMinutes();\r\n  },\r\n  mm: function () {\r\n    return this.toDouble(this.m());\r\n  },\r\n  s: function () {\r\n    return this[0].getSeconds();\r\n  },\r\n  ss: function () {\r\n    return this.toDouble(this.s());\r\n  },\r\n  SSS: function () {\r\n    return this[0].getMilliseconds();\r\n  },\r\n  SS: function () {\r\n    return parseInt(this.SSS() / 10);\r\n  },\r\n  S: function () {\r\n    return parseInt(this.SS() / 10);\r\n  },\r\n  A: function () {\r\n    var hm = this.H() * 100 + this.m();\r\n    if (hm < 600) {\r\n      return '凌晨';\r\n    } else if (hm < 900) {\r\n      return '早上';\r\n    } else if (hm < 1130) {\r\n      return '上午';\r\n    } else if (hm < 1230) {\r\n      return '中午';\r\n    } else if (hm < 1800) {\r\n      return '下午';\r\n    } else {\r\n      return '晚上';\r\n    }\r\n  },\r\n  a: function () {\r\n    return this.A();\r\n  },\r\n  x: function () {\r\n    return this[0].getTime();\r\n  },\r\n  X: function () {\r\n    return parseInt(this.x() / 1000);\r\n  }\r\n};\r\n\r\nTimeFormater.fn.init.prototype = TimeFormater.fn;\r\n\r\nmodule.exports = TimeFormater;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_time-formater@1.0.1@time-formater/timeformater.js\n// module id = 725\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../node_modules/_extract-text-webpack-plugin@2.1.2@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-cb240c70\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=styles&index=0!./tendency.vue\")\n\nvar Component = require(\"!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=script&index=0!./tendency.vue\"),\n  /* template */\n  require(\"!!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cb240c70\\\"}!../../node_modules/_vue-loader@11.3.4@vue-loader/lib/selector?type=template&index=0!./tendency.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tendency.vue\n// module id = 729\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('head-top'), _vm._v(\" \"), _c('section', {\n    staticClass: \"data_section\"\n  }, [_c('header', {\n    staticClass: \"section_title\"\n  }, [_vm._v(\"数据统计\")]), _vm._v(\" \"), _c('el-row', {\n    staticStyle: {\n      \"margin-bottom\": \"10px\"\n    },\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list today_head\"\n  }, [_c('span', {\n    staticClass: \"data_num head\"\n  }, [_vm._v(\"当日数据：\")])])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.apiCount))]), _vm._v(\" 颜值测试\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.userCount))]), _vm._v(\" 明星面对面\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.orderCount))]), _vm._v(\" 纹眉神器\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.adminCount))]), _vm._v(\" 抽奖游戏\")])])], 1), _vm._v(\" \"), _c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list all_head\"\n  }, [_c('span', {\n    staticClass: \"data_num head\"\n  }, [_vm._v(\"总数据：\")])])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 5\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allApi)), (_vm.allApiCount > 10000) ? _c('span', {\n    staticClass: \"wan\"\n  }, [_vm._v(\"万\")]) : _vm._e()]), _vm._v(\" 颜值测试\\n                    \")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allUserCount))]), _vm._v(\" 明星面对面\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allOrderCount))]), _vm._v(\" 纹眉神器\")])]), _vm._v(\" \"), _c('el-col', {\n    attrs: {\n      \"span\": 4\n    }\n  }, [_c('div', {\n    staticClass: \"data_list\"\n  }, [_c('span', {\n    staticClass: \"data_num\"\n  }, [_vm._v(_vm._s(_vm.allAdminCount))]), _vm._v(\" 抽奖游戏\")])])], 1)], 1), _vm._v(\" \"), _c('tendency', {\n    attrs: {\n      \"sevenDate\": _vm.sevenDate,\n      \"sevenDay\": _vm.sevenDay\n    }\n  })], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-1dd06570\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/page/home.vue\n// module id = 740\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0, false, false)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"line1\"\n  }, [_c('div', {\n    staticStyle: {\n      \"width\": \"90%\",\n      \"height\": \"450px\"\n    },\n    attrs: {\n      \"id\": \"line1\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@11.3.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-cb240c70\"}!./~/_vue-loader@11.3.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/tendency.vue\n// module id = 770\n// module chunks = 0"],"sourceRoot":""}